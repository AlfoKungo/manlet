{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gal\\\\Desktop\\\\manlet\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, Component } from 'react';\nimport FlashCard from './Questions/FlashCardQuestion';\nimport MulChoQuestion from './Questions/MulChoQuestion';\nimport WriteQuestion from './Questions/WriteQuestion';\nimport './App.css'; // const terms = \"uma televisão;a TV;;;uma pasta;a briefcase;;;uma mesa;a table;;;uma cadeira;a chair;;;uma porta;a door;;;uma casa;a house;;;uma árvore;a tree;;;uma chave;a key;;;uma janela;a window;;;uma flor;a flower;;;uma caneta;a pen;;;uma carta;a card;;;uma garrafa;a bottle;;;uma chàvena;a tee cup;;;um avião;a plane;;;um copo;a glass;;;um candeeiro;a lamp;;;um telefone;a telephone;;;um rádio;a radio;;;um livro;a book;;;um cão;a dog;;;um gato;a cat;;;um computador;a computer;;;um mapa;a map;;;um cinzeiro;an ashtray;;;um cigarro;a cigarette;;;um barco;a boat;;;um relógio;a clock;;;um carro;a car;;;um lápis;a pencil;;;os livros;books;;;as mesas;tables;;;um rapaz;a boy;;;rapazes;boys;;;o mês;the month;;;meses;months;;;um homen;a man;;;os homens;men;;;bom;good (Sg.);;;bons;good (Pl.);;;o jornal;the newspaper;;;os jornais;newspaper (Pl.);;;o papel;the paper;;;os papéis;sheets of paper (pl.);;;azul;blue;;;azuis;blue (pl.);;;a mão;the hand;;;as mâos;hands;;;o limão;the lemon;;;os limões;lemons;;;o cão;the dog;;;os cães;dog;;;dois lápis;two pencils;;;grande;big;;;pequeno;small;;;grosso;thick;;;fino;thin;;;forte;strong;;;fraco;weak;;;velho;old (objects & people);;;novo;new (objects);;;jovem;young (people & animal);;;curto;short;;;comprido;long;;;gordo;fat;;;magro;skinny;;;alto;tall;;;baixo;short;;;bonito;beautiful;;;feio;ugly;;;rico;rich;;;pobre;poor;;;caro;expensive;;;barato;cheap;;;em cima de;on top of;;;debaixo de;under;;;por cima de;above;;;dentro de;inside;;;fora de;outside of;;;à frente de;in front of;;;atrás de;behind;;;em frente de/a;in front of (facing each other) / opposite;;;ao lado de;next to;;;entre ... e ...;in between;;;mal;schlecht, schlimm;;;bem;gut;;;meu bem;mein Schatz;;;uma mala;a suitcase;;;branco/a;white;;;preto/a;black;;;cinzento/a;grey;;;laranja;orange;;;vermelho/a;red;;;amarelo/a;yellow;;;cor-de-rosa;rose;;;verde;green;;;castanho/a;brown;;;roxo/a;purple;;;De que cor é / sao ...;What is / are the colours ...;;;Como está?;Wie geht es Ihnen?;;;Éstas bom?;Are you good?;;;Tudo bem?;All good?;;;o restaurante;the restaurant;;;a piscina;the swimming pool;;;o banco;the bank;;;a escola;the school;;;o cinema;the movie theatre;;;o supermercado;the supermarket;;;só;nur;;;senão;otherwise;;;um namorodo;a boyfriend;;;uma namorada;a girlfriend;;;namorar;to date;;;acho que não / sim;I think so / I do not think so;;;achar;think / find;;;a semana;the week;;;a segunda-feira;Monday;;;a terça-feira;Tuesday;;;a quarta-feira;Wednesday;;;a quinta-feira;Thursday;;;a sexta-feira;Friday;;;o sábado;Saturday;;;o domingo;Sunday;;;os Estados Unidos;the US;;;estar come fome;to be hungry;;;estar com sede;to be thirsty;;;estar com frio;to be cold;;;estar com calor;to be hot;;;estar contente;to be happy;;;estar triste;to be unhappy;;;estar cansado/a;to be tired;;;estar doente;to be sick;;;aberto;open;;;fechado;closed;;;cheio;full;;;vazion;empty;;;ligado;on;;;desligado;off;;;aceso;on (lights);;;apagado;off (lights);;;sujo;dirty;;;limpo;clean;;;seco;dry;;;molhado;wet;;;isto;this (indefinite);;;isso;that (indefinite);;;aquilo;that over there (indefinite);;;aqui;here;;;ai;there;;;ali;over there;;;este/esta estes/estas;this (definite);;;esse/essa esses/essas;that (definite);;;aquele/aquela aqueles/aquelas;that over there (definite);;;\"\n// const terms = \"uma televisão;a TV;;;uma pasta;a briefcase;;;uma mesa;a table;;;uma cadeira;a chair;;;uma porta;a door;;;uma casa;a house;;;uma árvore;a tree;;;uma chave;a key;;;uma janela;a window;;;uma flor;a flower;;;uma caneta;a pen;;;uma carta;a card;;;uma garrafa;a bottle;;;uma chàvena;a tee cup;;;um avião;a plane;;;um copo;a glass\"\n// let  pieces = terms.split(\";;;\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet pieces;\nlet dataIsReturned = false;\nlet mc_words = []; // let r1_words =[0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n// let r1_words_this_round = [];\n\nlet write_words = [];\nlet done_words = [];\nlet words_status = []; // let words_status = new Array(pieces.length).fill(0);\n// let words_status = [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\n// let words_status = [1,1,2,2,1,3,0,0,0,0,0,0,0,0,0,0];\n// let words_status = [2,3,3,3,3,3,2,2,2,1,0,0,0,0,0,0];\n// let words_status = [2, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 1, 1];\n\nlet words_this_round = [];\nlet new_words_in_round = 0; // let is_answer_loaded = false;\n\nlet loaded_answer_value = false;\nlet is_allow_next_question = false;\nlet is_nextQue = false;\nlet counter_val = 0;\nvar done = false;\nconst WM_UNKNOWN = 0;\nconst WM_MC = 1;\nconst WM_WRITE = 2;\nconst WM_DONE = 3;\n\nfunction create_words_stat() {\n  console.log(pieces);\n  words_status = [];\n  words_status = new Array(pieces.length).fill(0);\n  words_status[0] = 1;\n  console.log(\":\" + words_status);\n}\n\nfunction set_by_words_status() {\n  for (let i = 0; i < words_status.length; i++) {\n    let ws = words_status[i];\n    if (ws == WM_MC) mc_words.push(i);\n    if (ws == WM_WRITE) write_words.push(i);\n    if (ws == WM_DONE) done_words.push(i);\n  }\n}\n\nfunction get_new_word() {\n  if (!words_status.includes(0)) return get_familiar_word(); // return words_status.findIndex((ele) => ele == 0);\n\n  return words_status.indexOf(0);\n}\n\nfunction get_familiar_word() {\n  // return 0;\n  const comb = mc_words.concat(write_words);\n  const difference = comb.filter(x => !words_this_round.includes(x));\n\n  if (difference.length > 0) {\n    let new_word = difference[Math.floor(Math.random() * difference.length)];\n    return new_word;\n  } else {\n    if (pieces.length == comb.length + done_words.length) return comb[Math.floor(Math.random() * difference.length)];\n    let new_word = get_new_word();\n    console.log(\"newwww \" + new_word);\n    return new_word;\n  }\n}\n\nfunction NextQuestion(is_answerd_right, counter, setCounter, setQType, setStageCounter) {\n  let word_stat = words_status[counter];\n  words_this_round.push(counter);\n\n  if (is_answerd_right) {\n    if (word_stat < 3) words_status[counter] = word_stat + 1;\n\n    switch (word_stat) {\n      case 0:\n        mc_words.push(counter);\n        break;\n\n      case 1:\n        mc_words.splice(mc_words.indexOf(counter), 1);\n        write_words.push(counter);\n        break;\n\n      case 2:\n        write_words.splice(write_words.indexOf(counter), 1);\n        done_words.push(counter);\n        break;\n\n      default:\n    }\n  } else {\n    if (word_stat > 1) words_status[counter] = word_stat - 1;\n\n    switch (word_stat) {\n      case 0:\n        break;\n\n      case 1:\n        break;\n\n      case 2:\n        write_words.splice(write_words.indexOf(counter), 1);\n        mc_words.push(counter);\n        break;\n\n      default:\n    }\n  }\n\n  if (words_this_round.length < 8) {\n    let mc_size = mc_words.length;\n\n    if (mc_size < 20) {\n      if (new_words_in_round < 2 && mc_size < 10) {\n        let new_counter = get_new_word();\n        words_status[new_counter] = WM_MC;\n        mc_words.push(new_counter);\n        console.log(\"nigaa 1 \");\n        updateCounter(setCounter, new_counter, setQType, setStageCounter);\n        new_words_in_round++;\n      } else {\n        let new_word = get_familiar_word();\n\n        if (!mc_words.includes(new_word) && !write_words.includes(new_word)) {\n          mc_words.push(new_word);\n          words_status[new_word] = WM_MC;\n        }\n\n        console.log(\"nigaa 2 \");\n        updateCounter(setCounter, new_word, setQType, setStageCounter);\n        new_words_in_round++;\n      }\n    } else {\n      let new_counter = mc_words[Math.floor(Math.random() * mc_words.length)];\n      updateCounter(setCounter, new_counter, setQType, setStageCounter);\n    }\n  } else {\n    new_words_in_round = 0;\n    words_this_round = [];\n    let new_word = get_familiar_word();\n\n    if (!mc_words.includes(new_word) && !write_words.includes(new_word)) {\n      mc_words.push(new_word);\n      words_status[new_word] = WM_MC;\n    }\n\n    console.log(\"nigaa 3 \");\n    updateCounter(setCounter, new_word, setQType, setStageCounter); // next round\n  }\n}\n\n_c = NextQuestion;\n\nfunction allow_next_question(setNextQue) {\n  is_allow_next_question = true;\n  setNextQue(true);\n}\n\nfunction load_next_question(is_answered_right, setNextQue) {\n  loaded_answer_value = is_answered_right;\n  setTimeout(() => {\n    allow_next_question(setNextQue);\n  }, 200);\n}\n\nfunction trigger_next_question(setCounter, setNextQue, setQType, setStageCounter) {\n  if (is_allow_next_question) {\n    NextQuestion(loaded_answer_value, counter_val, setCounter, setQType, setStageCounter);\n    is_allow_next_question = false;\n    setNextQue(false);\n  }\n}\n\nfunction updateCounter(setCounter, new_counter, setQType, setStageCounter) {\n  // console.log(words_status);\n  console.log(\"new word is \" + new_counter);\n  setStageCounter(prev => prev + 1);\n  setCounter(new_counter);\n  updateQType(new_counter, setQType);\n}\n\nfunction updateQType(counter, setQType) {\n  if (words_status[counter] == 1) {\n    setQType(0);\n  } else {\n    setQType(1);\n  }\n}\n\nconst loadAllState = async (setCounter, setQType, setStageCounter) => {\n  await fetch(\"http://localhost:5000/api?userName=nigo\", {\n    method: 'GET',\n    params: {\n      \"userName\": \"nigo\"\n    }\n  }).then(response => response.json()).then(data => {\n    pieces = data.terms.split(\";;;\");\n  });\n  create_words_stat();\n  dataIsReturned = true;\n  set_by_words_status();\n  updateCounter(setCounter, 0, setQType, setStageCounter);\n};\n\nconst App = () => {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n  const [stageCounter, setStageCounter] = useState(0);\n  const [qType, setQType] = useState(0);\n  const [answer, setAnswer] = useState(0);\n  const [nextQue, setNextQue] = useState(false); // componentDidMount() {\n  //   console.log();\n  // }\n  //   componentDidMount() {\n  //     fetch(\"http://localhost:5000/api\").then(\n  //       response => response.json()\n  //     ).then(\n  //       data => {\n  //         // console.log(data);\n  //         pieces = data.terms.split(\";;;\");\n  //         create_words_stat();\n  //         console.log(pieces);\n  //       }\n  //     )\n  // };\n\n  useEffect(() => {\n    loadAllState(setCounter, setQType, setStageCounter);\n  }, []);\n\n  const handleAnswer = val => {\n    // setAnswer(val);\n    load_next_question(val, setNextQue);\n  }; // window.addEventListener('keydown', function(e) {\n  //   if(e.key == ' ') {\n  //     e.preventDefault();\n  //   }\n  // });\n\n\n  document.addEventListener('keydown', event => {\n    if (event.key == ' ' || event.key == 'Enter') trigger_next_question(setCounter, setNextQue, setQType, setStageCounter);\n  });\n  useEffect(() => {\n    if (counter >= 0) {\n      console.log(\"new word is \" + counter);\n      counter_val = counter;\n      updateQType(counter, setQType);\n    }\n  }, [counter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: dataIsReturned ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-div\",\n        onClick: event => trigger_next_question(setCounter, setNextQue, setQType, setStageCounter),\n        children: [qType == 0 ? /*#__PURE__*/_jsxDEV(MulChoQuestion, {\n          counter: counter,\n          pieces: pieces,\n          handleAnswer: handleAnswer,\n          stageCounter: stageCounter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 7\n        }, this) // <WriteQuestion counter={counter} pieces = {pieces} handleAnswer={handleAnswer}/>\n        : /*#__PURE__*/_jsxDEV(WriteQuestion, {\n          counter: counter,\n          pieces: pieces,\n          handleAnswer: handleAnswer,\n          stageCounter: stageCounter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 9\n        }, this) // <MulChoQuestion counter={counter} pieces = {pieces} handleAnswer={handleAnswer}/>\n        , /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: nextQue ?\n          /*#__PURE__*/\n          // <h3>{is_nextQue ? (\n          _jsxDEV(_Fragment, {\n            children: \"Click anything to move to next question\"\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: mc_words.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: write_words.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: done_words.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: words_status.toString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Hql/iVDDyoQmI/qFm/EYx7iW/uc=\");\n\n_c2 = App;\nexport default App; // {/* <button onClick={() => setCounter(Math.floor(Math.random() * (pieces.length)))}>Randomize</button>\n// <input id=\"write-box\" autoComplete=\"off\" placeholder='Insert text'/> */}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NextQuestion\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useEffect","useState","Component","FlashCard","MulChoQuestion","WriteQuestion","pieces","dataIsReturned","mc_words","write_words","done_words","words_status","words_this_round","new_words_in_round","loaded_answer_value","is_allow_next_question","is_nextQue","counter_val","done","WM_UNKNOWN","WM_MC","WM_WRITE","WM_DONE","create_words_stat","console","log","Array","length","fill","set_by_words_status","i","ws","push","get_new_word","includes","get_familiar_word","indexOf","comb","concat","difference","filter","x","new_word","Math","floor","random","NextQuestion","is_answerd_right","counter","setCounter","setQType","setStageCounter","word_stat","splice","mc_size","new_counter","updateCounter","allow_next_question","setNextQue","load_next_question","is_answered_right","setTimeout","trigger_next_question","prev","updateQType","loadAllState","fetch","method","params","then","response","json","data","terms","split","App","stageCounter","qType","answer","setAnswer","nextQue","handleAnswer","val","document","addEventListener","event","key","toString"],"sources":["C:/Users/gal/Desktop/manlet/client/src/App.js"],"sourcesContent":["import {useEffect, useState, Component} from 'react';\nimport FlashCard from './Questions/FlashCardQuestion'\nimport MulChoQuestion from './Questions/MulChoQuestion'\nimport WriteQuestion from './Questions/WriteQuestion'\n\n\nimport './App.css';\n\n\n\n\n// const terms = \"uma televisão;a TV;;;uma pasta;a briefcase;;;uma mesa;a table;;;uma cadeira;a chair;;;uma porta;a door;;;uma casa;a house;;;uma árvore;a tree;;;uma chave;a key;;;uma janela;a window;;;uma flor;a flower;;;uma caneta;a pen;;;uma carta;a card;;;uma garrafa;a bottle;;;uma chàvena;a tee cup;;;um avião;a plane;;;um copo;a glass;;;um candeeiro;a lamp;;;um telefone;a telephone;;;um rádio;a radio;;;um livro;a book;;;um cão;a dog;;;um gato;a cat;;;um computador;a computer;;;um mapa;a map;;;um cinzeiro;an ashtray;;;um cigarro;a cigarette;;;um barco;a boat;;;um relógio;a clock;;;um carro;a car;;;um lápis;a pencil;;;os livros;books;;;as mesas;tables;;;um rapaz;a boy;;;rapazes;boys;;;o mês;the month;;;meses;months;;;um homen;a man;;;os homens;men;;;bom;good (Sg.);;;bons;good (Pl.);;;o jornal;the newspaper;;;os jornais;newspaper (Pl.);;;o papel;the paper;;;os papéis;sheets of paper (pl.);;;azul;blue;;;azuis;blue (pl.);;;a mão;the hand;;;as mâos;hands;;;o limão;the lemon;;;os limões;lemons;;;o cão;the dog;;;os cães;dog;;;dois lápis;two pencils;;;grande;big;;;pequeno;small;;;grosso;thick;;;fino;thin;;;forte;strong;;;fraco;weak;;;velho;old (objects & people);;;novo;new (objects);;;jovem;young (people & animal);;;curto;short;;;comprido;long;;;gordo;fat;;;magro;skinny;;;alto;tall;;;baixo;short;;;bonito;beautiful;;;feio;ugly;;;rico;rich;;;pobre;poor;;;caro;expensive;;;barato;cheap;;;em cima de;on top of;;;debaixo de;under;;;por cima de;above;;;dentro de;inside;;;fora de;outside of;;;à frente de;in front of;;;atrás de;behind;;;em frente de/a;in front of (facing each other) / opposite;;;ao lado de;next to;;;entre ... e ...;in between;;;mal;schlecht, schlimm;;;bem;gut;;;meu bem;mein Schatz;;;uma mala;a suitcase;;;branco/a;white;;;preto/a;black;;;cinzento/a;grey;;;laranja;orange;;;vermelho/a;red;;;amarelo/a;yellow;;;cor-de-rosa;rose;;;verde;green;;;castanho/a;brown;;;roxo/a;purple;;;De que cor é / sao ...;What is / are the colours ...;;;Como está?;Wie geht es Ihnen?;;;Éstas bom?;Are you good?;;;Tudo bem?;All good?;;;o restaurante;the restaurant;;;a piscina;the swimming pool;;;o banco;the bank;;;a escola;the school;;;o cinema;the movie theatre;;;o supermercado;the supermarket;;;só;nur;;;senão;otherwise;;;um namorodo;a boyfriend;;;uma namorada;a girlfriend;;;namorar;to date;;;acho que não / sim;I think so / I do not think so;;;achar;think / find;;;a semana;the week;;;a segunda-feira;Monday;;;a terça-feira;Tuesday;;;a quarta-feira;Wednesday;;;a quinta-feira;Thursday;;;a sexta-feira;Friday;;;o sábado;Saturday;;;o domingo;Sunday;;;os Estados Unidos;the US;;;estar come fome;to be hungry;;;estar com sede;to be thirsty;;;estar com frio;to be cold;;;estar com calor;to be hot;;;estar contente;to be happy;;;estar triste;to be unhappy;;;estar cansado/a;to be tired;;;estar doente;to be sick;;;aberto;open;;;fechado;closed;;;cheio;full;;;vazion;empty;;;ligado;on;;;desligado;off;;;aceso;on (lights);;;apagado;off (lights);;;sujo;dirty;;;limpo;clean;;;seco;dry;;;molhado;wet;;;isto;this (indefinite);;;isso;that (indefinite);;;aquilo;that over there (indefinite);;;aqui;here;;;ai;there;;;ali;over there;;;este/esta estes/estas;this (definite);;;esse/essa esses/essas;that (definite);;;aquele/aquela aqueles/aquelas;that over there (definite);;;\"\n// const terms = \"uma televisão;a TV;;;uma pasta;a briefcase;;;uma mesa;a table;;;uma cadeira;a chair;;;uma porta;a door;;;uma casa;a house;;;uma árvore;a tree;;;uma chave;a key;;;uma janela;a window;;;uma flor;a flower;;;uma caneta;a pen;;;uma carta;a card;;;uma garrafa;a bottle;;;uma chàvena;a tee cup;;;um avião;a plane;;;um copo;a glass\"\n// let  pieces = terms.split(\";;;\");\nlet  pieces;\n\nlet dataIsReturned = false;\n\nlet mc_words =[];\n// let r1_words =[0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n// let r1_words_this_round = [];\nlet write_words =[];\nlet done_words =[];\nlet words_status = [];\n// let words_status = new Array(pieces.length).fill(0);\n// let words_status = [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\n// let words_status = [1,1,2,2,1,3,0,0,0,0,0,0,0,0,0,0];\n// let words_status = [2,3,3,3,3,3,2,2,2,1,0,0,0,0,0,0];\n\n// let words_status = [2, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 1, 1];\nlet words_this_round = [];\nlet new_words_in_round =0;\n\n// let is_answer_loaded = false;\nlet loaded_answer_value = false;\nlet is_allow_next_question =false;\nlet is_nextQue = false;\n\nlet counter_val = 0;\n\nvar done = false;\n\nconst WM_UNKNOWN = 0;\nconst WM_MC = 1;\nconst WM_WRITE = 2;\nconst WM_DONE = 3;\n\nfunction create_words_stat()\n{\n  console.log(pieces);\n  words_status = [];\n  \n  words_status = new Array(pieces.length).fill(0);\n  words_status[0] = 1;\n  console.log(\":\" + words_status);\n}\n\nfunction set_by_words_status()\n{\n  for (let i = 0; i< words_status.length; i++){\n    let ws = words_status[i];\n    if (ws == WM_MC)\n      mc_words.push(i);\n    if (ws == WM_WRITE)\n      write_words.push(i);\n    if (ws == WM_DONE)\n      done_words.push(i);\n  }\n}\n\nfunction get_new_word()\n{\n  if (!words_status.includes(0))\n    return get_familiar_word();\n  // return words_status.findIndex((ele) => ele == 0);\n  return words_status.indexOf(0);\n\n}\nfunction get_familiar_word()\n{\n  // return 0;\n  const comb = mc_words.concat(write_words);\n  const difference = comb.filter( x => !words_this_round.includes(x) ); \n  if (difference.length > 0)\n  {\n    let new_word = difference[Math.floor(Math.random() * (difference.length))];\n\n    return new_word;\n  }\n  else \n  {\n    if (pieces.length == comb.length + done_words.length)\n      return comb[Math.floor(Math.random() * (difference.length))]\n    let new_word = get_new_word();\n    console.log(\"newwww \" + new_word);\n    return new_word;\n  }\n}\n\nfunction NextQuestion(is_answerd_right, counter, setCounter, setQType, setStageCounter)\n{\n  let word_stat = words_status[counter];\n  words_this_round.push(counter);\n\n  if (is_answerd_right)\n  {\n    if (word_stat < 3)\n      words_status[counter] = word_stat+1;\n    switch (word_stat)\n    {\n      case 0:\n        mc_words.push(counter);\n        break;\n      case 1:\n        mc_words.splice(mc_words.indexOf(counter), 1)\n        write_words.push(counter);\n        break;\n      case 2:\n        write_words.splice(write_words.indexOf(counter), 1)\n        done_words.push(counter);\n        break;\n        default:\n    }\n  }\n  else\n  {\n    if (word_stat > 1)\n      words_status[counter] = word_stat-1;\n    switch (word_stat)\n    {\n      case 0:\n        break;\n      case 1:\n        break;\n      case 2:\n        write_words.splice(write_words.indexOf(counter),1);\n        mc_words.push(counter);\n        break;\n        default:\n    }\n  }\n  if (words_this_round.length < 8)\n  {\n    let mc_size = mc_words.length;\n    if (mc_size < 20)\n    {\n      if (new_words_in_round < 2 && mc_size < 10)\n      {\n        let new_counter = get_new_word();\n        words_status[new_counter] = WM_MC;\n        mc_words.push(new_counter);\n        console.log(\"nigaa 1 \");\n\n        updateCounter(setCounter, new_counter, setQType, setStageCounter)\n\n        new_words_in_round++;\n      }\n      else\n      {\n        let new_word = get_familiar_word();\n        if (!mc_words.includes(new_word) && !write_words.includes(new_word))\n        {\n          mc_words.push(new_word);\n          words_status[new_word] = WM_MC;\n        }\n        console.log(\"nigaa 2 \");\n\n        updateCounter(setCounter, new_word, setQType, setStageCounter)\n        new_words_in_round++;\n      }\n\n    }\n    else\n    {\n      let new_counter = mc_words[Math.floor(Math.random() * (mc_words.length))];\n      updateCounter(setCounter, new_counter, setQType, setStageCounter)\n    }\n  }\n  else\n  {\n    new_words_in_round = 0;\n    words_this_round = [];\n    let new_word = get_familiar_word();\n    if (!mc_words.includes(new_word) && !write_words.includes(new_word))\n    {\n      mc_words.push(new_word);\n      words_status[new_word] = WM_MC;\n    }\n    console.log(\"nigaa 3 \");\n\n    updateCounter(setCounter, new_word, setQType, setStageCounter)\n\n\n    // next round\n  }\n}\n\nfunction allow_next_question(setNextQue)\n{\n  is_allow_next_question = true;\n  setNextQue(true);\n}\n\nfunction load_next_question(is_answered_right,setNextQue)\n{\n  loaded_answer_value = is_answered_right;\n  setTimeout(() => { \n    allow_next_question(setNextQue);\n    }, 200);\n}\n\nfunction trigger_next_question(setCounter, setNextQue, setQType, setStageCounter)\n{\n  if (is_allow_next_question)\n  {\n    NextQuestion(loaded_answer_value, counter_val, setCounter, setQType, setStageCounter);\n    is_allow_next_question = false;\n    setNextQue(false);\n  }\n  \n}\nfunction updateCounter(setCounter, new_counter, setQType, setStageCounter)\n{\n  // console.log(words_status);\n  console.log(\"new word is \" + new_counter);\n  setStageCounter((prev) => prev +1);\n  setCounter(new_counter);\n  updateQType(new_counter, setQType);\n}\n\nfunction updateQType(counter, setQType)\n{\n  if (words_status[counter] == 1 )\n      { setQType(0); }\n      else\n      { setQType(1); } \n}\n\nconst loadAllState = async(setCounter,setQType, setStageCounter) => {\n  await fetch(\"http://localhost:5000/api?userName=nigo\", {method: 'GET', params: {\"userName\":\"nigo\"}}).then(\n      response => response.json()\n    ).then(\n      data => {\n        pieces = data.terms.split(\";;;\");\n        \n      }\n    );\n    create_words_stat();\n        dataIsReturned = true;\n        \n        set_by_words_status();\n        updateCounter(setCounter, 0, setQType, setStageCounter)\n}\nconst App = () => {\n\n  const [counter, setCounter] = useState(0);\n  const [stageCounter, setStageCounter] = useState(0);\n  const [qType, setQType] = useState(0);\n  const [answer, setAnswer] = useState(0);\n  const [nextQue, setNextQue] = useState(false); \n\n// componentDidMount() {\n//   console.log();\n// }\n//   componentDidMount() {\n//     fetch(\"http://localhost:5000/api\").then(\n//       response => response.json()\n//     ).then(\n//       data => {\n//         // console.log(data);\n//         pieces = data.terms.split(\";;;\");\n//         create_words_stat();\n\n//         console.log(pieces);\n//       }\n//     )\n// };\n\n  useEffect(() =>{\n    loadAllState(setCounter,setQType, setStageCounter);\n  }, []);\n\n    \n  const handleAnswer = (val) => {\n    // setAnswer(val);\n    load_next_question(val, setNextQue);\n  }\n  // window.addEventListener('keydown', function(e) {\n  //   if(e.key == ' ') {\n  //     e.preventDefault();\n  //   }\n  // });\n\n  document.addEventListener('keydown', \n  (event) => { \n    if(event.key == ' ' || event.key == 'Enter') \n      trigger_next_question(setCounter, setNextQue, setQType, setStageCounter);\n  });\n\n  \n\n  useEffect(() => {\n    if (counter >= 0)\n    {\n      console.log(\"new word is \" + counter);\n      counter_val = counter;\n      \n      updateQType(counter, setQType);\n    }   \n},[counter]);\n\n  return (\n    <div className=\"App\">\n    { dataIsReturned ?\n    (\n      <>\n    <div className=\"question-div\"\n      onClick={(event) =>  \n          trigger_next_question(setCounter, setNextQue, setQType, setStageCounter)}>\n            \n    {qType == 0 ?(\n      <MulChoQuestion counter={counter} pieces = {pieces}\n       handleAnswer={handleAnswer} stageCounter={stageCounter}/>\n      // <WriteQuestion counter={counter} pieces = {pieces} handleAnswer={handleAnswer}/>\n\n\n    )\n      :(\n        <WriteQuestion counter={counter} pieces = {pieces}\n         handleAnswer={handleAnswer} stageCounter={stageCounter}/>\n        // <MulChoQuestion counter={counter} pieces = {pieces} handleAnswer={handleAnswer}/>\n\n      )}\n      <h3>{nextQue ? (\n      // <h3>{is_nextQue ? (\n\n      <>\n      Click anything to move to next question\n      </>\n    ) : (\n      <>\n         \n      </>\n    )}\n    </h3>\n    </div>\n    \n\n       <h1>{mc_words.toString()}</h1>\n       \n    <h1>{write_words.toString()}</h1>\n    <h1>{done_words.toString()}</h1>\n    <h1>{words_status.toString()}</h1>\n    </>\n    ) : \n    <h1>Loading</h1>}\n    </div>\n  );\n}\n\nexport default App;\n \n\n\n    // {/* <button onClick={() => setCounter(Math.floor(Math.random() * (pieces.length)))}>Randomize</button>\n    // <input id=\"write-box\" autoComplete=\"off\" placeholder='Insert text'/> */}"],"mappings":"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"},"metadata":{},"sourceType":"module"}