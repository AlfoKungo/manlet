{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gal\\\\Desktop\\\\manlet\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport FlashCard from './Questions/FlashCardQuestion';\nimport MulChoQuestion from './Questions/MulChoQuestion';\nimport WriteQuestion from './Questions/WriteQuestion';\nimport './App.css'; // const terms = \"uma televisão;a TV;;;uma pasta;a briefcase;;;uma mesa;a table;;;uma cadeira;a chair;;;uma porta;a door;;;uma casa;a house;;;uma árvore;a tree;;;uma chave;a key;;;uma janela;a window;;;uma flor;a flower;;;uma caneta;a pen;;;uma carta;a card;;;uma garrafa;a bottle;;;uma chàvena;a tee cup;;;um avião;a plane;;;um copo;a glass;;;um candeeiro;a lamp;;;um telefone;a telephone;;;um rádio;a radio;;;um livro;a book;;;um cão;a dog;;;um gato;a cat;;;um computador;a computer;;;um mapa;a map;;;um cinzeiro;an ashtray;;;um cigarro;a cigarette;;;um barco;a boat;;;um relógio;a clock;;;um carro;a car;;;um lápis;a pencil;;;os livros;books;;;as mesas;tables;;;um rapaz;a boy;;;rapazes;boys;;;o mês;the month;;;meses;months;;;um homen;a man;;;os homens;men;;;bom;good (Sg.);;;bons;good (Pl.);;;o jornal;the newspaper;;;os jornais;newspaper (Pl.);;;o papel;the paper;;;os papéis;sheets of paper (pl.);;;azul;blue;;;azuis;blue (pl.);;;a mão;the hand;;;as mâos;hands;;;o limão;the lemon;;;os limões;lemons;;;o cão;the dog;;;os cães;dog;;;dois lápis;two pencils;;;grande;big;;;pequeno;small;;;grosso;thick;;;fino;thin;;;forte;strong;;;fraco;weak;;;velho;old (objects & people);;;novo;new (objects);;;jovem;young (people & animal);;;curto;short;;;comprido;long;;;gordo;fat;;;magro;skinny;;;alto;tall;;;baixo;short;;;bonito;beautiful;;;feio;ugly;;;rico;rich;;;pobre;poor;;;caro;expensive;;;barato;cheap;;;em cima de;on top of;;;debaixo de;under;;;por cima de;above;;;dentro de;inside;;;fora de;outside of;;;à frente de;in front of;;;atrás de;behind;;;em frente de/a;in front of (facing each other) / opposite;;;ao lado de;next to;;;entre ... e ...;in between;;;mal;schlecht, schlimm;;;bem;gut;;;meu bem;mein Schatz;;;uma mala;a suitcase;;;branco/a;white;;;preto/a;black;;;cinzento/a;grey;;;laranja;orange;;;vermelho/a;red;;;amarelo/a;yellow;;;cor-de-rosa;rose;;;verde;green;;;castanho/a;brown;;;roxo/a;purple;;;De que cor é / sao ...;What is / are the colours ...;;;Como está?;Wie geht es Ihnen?;;;Éstas bom?;Are you good?;;;Tudo bem?;All good?;;;o restaurante;the restaurant;;;a piscina;the swimming pool;;;o banco;the bank;;;a escola;the school;;;o cinema;the movie theatre;;;o supermercado;the supermarket;;;só;nur;;;senão;otherwise;;;um namorodo;a boyfriend;;;uma namorada;a girlfriend;;;namorar;to date;;;acho que não / sim;I think so / I do not think so;;;achar;think / find;;;a semana;the week;;;a segunda-feira;Monday;;;a terça-feira;Tuesday;;;a quarta-feira;Wednesday;;;a quinta-feira;Thursday;;;a sexta-feira;Friday;;;o sábado;Saturday;;;o domingo;Sunday;;;os Estados Unidos;the US;;;estar come fome;to be hungry;;;estar com sede;to be thirsty;;;estar com frio;to be cold;;;estar com calor;to be hot;;;estar contente;to be happy;;;estar triste;to be unhappy;;;estar cansado/a;to be tired;;;estar doente;to be sick;;;aberto;open;;;fechado;closed;;;cheio;full;;;vazion;empty;;;ligado;on;;;desligado;off;;;aceso;on (lights);;;apagado;off (lights);;;sujo;dirty;;;limpo;clean;;;seco;dry;;;molhado;wet;;;isto;this (indefinite);;;isso;that (indefinite);;;aquilo;that over there (indefinite);;;aqui;here;;;ai;there;;;ali;over there;;;este/esta estes/estas;this (definite);;;esse/essa esses/essas;that (definite);;;aquele/aquela aqueles/aquelas;that over there (definite);;;\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst terms = \"uma televisão;a TV;;;uma pasta;a briefcase;;;uma mesa;a table;;;uma cadeira;a chair;;;uma porta;a door;;;uma casa;a house;;;uma árvore;a tree;;;uma chave;a key;;;uma janela;a window;;;uma flor;a flower;;;uma caneta;a pen;;;uma carta;a card;;;uma garrafa;a bottle;;;uma chàvena;a tee cup;;;um avião;a plane;;;um copo;a glass\";\nconst pieces = terms.split(\";;;\");\nlet mc_words = [0]; // let r1_words =[0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n// let r1_words_this_round = [];\n\nlet write_words = [];\nlet done_words = []; // let words_status = new Array(pieces.length).fill(0);\n\nlet words_status = [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\nlet words_this_round = [];\nlet new_words_in_round = 0;\nlet is_answer_loaded = false;\nlet loaded_answer_value = false;\nlet alllow_next_question = false;\nlet counter_val = 0;\nvar done = false;\nconst WM_UNKNOWN = 0;\nconst WM_MC = 1;\nconst WM_WRITE = 2;\nconst WM_DONE = 3;\n\nfunction get_new_word() {\n  // console.log(mc_words);\n  let familiar_words = mc_words.concat(write_words).concat(done_words);\n  let new_word = familiar_words.length;\n\n  for (let i = 0; i < pieces.length; i++) {\n    if (!words_this_round.includes(new_word) && !familiar_words.includes(new_word)) {\n      // console.log(\"i returned: \" + new_word);\n      return new_word;\n    }\n\n    new_word++;\n  }\n\n  return mc_words.length;\n}\n\nfunction get_familiar_word() {\n  const comb = mc_words.concat(write_words);\n  const difference = comb.filter(x => !words_this_round.includes(x));\n\n  if (difference.length > 0) {\n    let new_word = difference[Math.floor(Math.random() * difference.length)]; // console.log(\"i returned2: \" + new_word + \" : \" + mc_words);\n\n    return new_word;\n  } else {\n    if (pieces.length == comb.length + done_words.length) return comb[Math.floor(Math.random() * difference.length)];\n    let new_word = get_new_word();\n    console.log(\"newwww \" + new_word);\n    return new_word;\n  }\n}\n\nfunction NextQuestion(is_answerd_right, counter, setCounter) {\n  let word_stat = words_status[counter];\n  words_this_round.push(counter);\n\n  if (is_answerd_right) {\n    // console.log(\"word status1 \"+counter);\n    if (word_stat < 3) words_status[counter] = word_stat + 1;\n\n    switch (word_stat) {\n      case 0:\n        mc_words.push(counter);\n        break;\n\n      case 1:\n        mc_words.splice(mc_words.indexOf(counter), 1);\n        write_words.push(counter);\n        break;\n\n      case 2:\n        write_words.splice(write_words.indexOf(counter), 1);\n        done_words.push(counter);\n        break;\n\n      default:\n    }\n  } else {\n    if (word_stat > 1) words_status[counter] = word_stat - 1;\n\n    switch (word_stat) {\n      case 0:\n        // r1_words.push(word_stat);\n        break;\n\n      case 1:\n        // mc_words.splice(mc_words.indexOf(counter),1);\n        break;\n\n      case 2:\n        write_words.splice(write_words.indexOf(counter), 1);\n        mc_words.push(counter);\n        console.log(\"i pushed to mc2\");\n        break;\n\n      default:\n    } // console.log(\"wrong answer\");\n\n  }\n\n  if (words_this_round.length < 8) {\n    let mc_size = mc_words.length;\n\n    if (mc_size < 20) {\n      if (new_words_in_round < 2 && mc_size < 10) {\n        let new_counter = get_new_word(); // console.log(\"got new word \" + new_counter);\n\n        words_status[new_counter] = WM_MC;\n        mc_words.push(new_counter);\n        setCounter(new_counter);\n        new_words_in_round++;\n      } else {\n        let new_word = get_familiar_word();\n\n        if (!mc_words.includes(new_word) && !write_words.includes(new_word)) {\n          mc_words.push(new_word);\n          words_status[new_word] = WM_MC;\n        } // console.log(\"got new word 1\" + new_word);\n\n\n        setCounter(new_word);\n        new_words_in_round++;\n      }\n    } else {\n      let new_counter = mc_words[Math.floor(Math.random() * mc_words.length)];\n      console.log(\"got new word 2\" + new_counter);\n      setCounter(new_counter); // console.log(\"fun 4\");\n    } // words_this_round.p;\n\n  } else {\n    // console.log(\"hola\");\n    new_words_in_round = 0;\n    words_this_round = [];\n    let new_word = get_familiar_word();\n\n    if (!mc_words.includes(new_word) && !write_words.includes(new_word)) {\n      mc_words.push(new_word);\n      words_status[new_word] = WM_MC;\n    }\n\n    console.log(\"got new word 3\" + new_word);\n    setCounter(new_word);\n    console.log(\"new round \"); // next round\n  }\n}\n\n_c = NextQuestion;\n\nfunction load_next_question(is_answered_right) {\n  is_answer_loaded = true;\n  loaded_answer_value = is_answered_right;\n  setTimeout(() => {\n    alllow_next_question = true;\n  }, 1000);\n}\n\nfunction trigger_next_question(setCounter) {\n  if (alllow_next_question) if (is_answer_loaded) {\n    console.log(\"called \" + \" : \" + counter_val);\n    NextQuestion(loaded_answer_value, counter_val, setCounter);\n    is_answer_loaded = false;\n  }\n}\n\nconst App = () => {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n  const [qType, setQType] = useState(0);\n  const [answer, setAnswer] = useState(0);\n\n  const handleAnswer = val => {\n    // setAnswer(val);\n    load_next_question(val);\n  };\n\n  window.addEventListener('keydown', function (e) {\n    if (e.key == 'Space') {\n      e.preventDefault();\n    }\n  });\n  document.addEventListener('keydown', event => {\n    if (event.key == ' ') trigger_next_question(setCounter);\n  }); // let qd =document.getElementById(\"question-div\");\n  // if (qd != null)\n  //   qd.addEventListener('mousedown', \n  //   (event) => {\n  //     console.log(event);\n  //     if (event.button === 0)\n  //     trigger_next_question(setCounter);});\n  // document.addEventListener('mousedown', \n  // (event) => {\n  //   console.log(event);\n  //   if (event.button === 0)\n  //   trigger_next_question(setCounter);});\n\n  useEffect(() => {\n    if (counter >= 0) {\n      console.log(\"new word is \" + counter);\n      counter_val = counter; // console.log(\"there \" + words_status[counter]);\n\n      if (words_status[counter] == 1) {\n        setQType(0); // console.log(\"here\");\n      } else {\n        setQType(1); // r1_words.push(counter);\n      }\n    }\n  }, [counter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => NextQuestion(false, counter, setCounter),\n      children: \"nextQuestion (false)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => NextQuestion(true, counter, setCounter),\n      children: \"nextQuestion (true)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"question-div\",\n      onClick: event => trigger_next_question(setCounter),\n      children: qType == 0 ?\n      /*#__PURE__*/\n      // <FlashCard counter={counter} pieces = {pieces}/>\n      _jsxDEV(MulChoQuestion, {\n        counter: counter,\n        pieces: pieces,\n        handleAnswer: handleAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 7\n      }, this) // <WriteQuestion counter={counter} pieces = {pieces}/>\n      : /*#__PURE__*/_jsxDEV(WriteQuestion, {\n        counter: counter,\n        pieces: pieces,\n        handleAnswer: handleAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this) // <MulChoQuestion counter={counter} pieces = {pieces}/>\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCounter(prevCounter => prevCounter - 1),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCounter(prevCounter => prevCounter + 1),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCounter(Math.floor(Math.random() * pieces.length)),\n      children: \"Randomize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: mc_words.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"write-box\",\n      autoComplete: \"off\",\n      placeholder: \"Insert text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: write_words.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: done_words.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: words_status.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 264,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"aOfIvjs44Xlh/K1aTE+rkPRxPw8=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NextQuestion\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useEffect","useState","FlashCard","MulChoQuestion","WriteQuestion","terms","pieces","split","mc_words","write_words","done_words","words_status","words_this_round","new_words_in_round","is_answer_loaded","loaded_answer_value","alllow_next_question","counter_val","done","WM_UNKNOWN","WM_MC","WM_WRITE","WM_DONE","get_new_word","familiar_words","concat","new_word","length","i","includes","get_familiar_word","comb","difference","filter","x","Math","floor","random","console","log","NextQuestion","is_answerd_right","counter","setCounter","word_stat","push","splice","indexOf","mc_size","new_counter","load_next_question","is_answered_right","setTimeout","trigger_next_question","App","qType","setQType","answer","setAnswer","handleAnswer","val","window","addEventListener","e","key","preventDefault","document","event","prevCounter","toString"],"sources":["C:/Users/gal/Desktop/manlet/src/App.js"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport FlashCard from './Questions/FlashCardQuestion'\nimport MulChoQuestion from './Questions/MulChoQuestion'\nimport WriteQuestion from './Questions/WriteQuestion'\n\n\nimport './App.css';\n\n\n\n\n// const terms = \"uma televisão;a TV;;;uma pasta;a briefcase;;;uma mesa;a table;;;uma cadeira;a chair;;;uma porta;a door;;;uma casa;a house;;;uma árvore;a tree;;;uma chave;a key;;;uma janela;a window;;;uma flor;a flower;;;uma caneta;a pen;;;uma carta;a card;;;uma garrafa;a bottle;;;uma chàvena;a tee cup;;;um avião;a plane;;;um copo;a glass;;;um candeeiro;a lamp;;;um telefone;a telephone;;;um rádio;a radio;;;um livro;a book;;;um cão;a dog;;;um gato;a cat;;;um computador;a computer;;;um mapa;a map;;;um cinzeiro;an ashtray;;;um cigarro;a cigarette;;;um barco;a boat;;;um relógio;a clock;;;um carro;a car;;;um lápis;a pencil;;;os livros;books;;;as mesas;tables;;;um rapaz;a boy;;;rapazes;boys;;;o mês;the month;;;meses;months;;;um homen;a man;;;os homens;men;;;bom;good (Sg.);;;bons;good (Pl.);;;o jornal;the newspaper;;;os jornais;newspaper (Pl.);;;o papel;the paper;;;os papéis;sheets of paper (pl.);;;azul;blue;;;azuis;blue (pl.);;;a mão;the hand;;;as mâos;hands;;;o limão;the lemon;;;os limões;lemons;;;o cão;the dog;;;os cães;dog;;;dois lápis;two pencils;;;grande;big;;;pequeno;small;;;grosso;thick;;;fino;thin;;;forte;strong;;;fraco;weak;;;velho;old (objects & people);;;novo;new (objects);;;jovem;young (people & animal);;;curto;short;;;comprido;long;;;gordo;fat;;;magro;skinny;;;alto;tall;;;baixo;short;;;bonito;beautiful;;;feio;ugly;;;rico;rich;;;pobre;poor;;;caro;expensive;;;barato;cheap;;;em cima de;on top of;;;debaixo de;under;;;por cima de;above;;;dentro de;inside;;;fora de;outside of;;;à frente de;in front of;;;atrás de;behind;;;em frente de/a;in front of (facing each other) / opposite;;;ao lado de;next to;;;entre ... e ...;in between;;;mal;schlecht, schlimm;;;bem;gut;;;meu bem;mein Schatz;;;uma mala;a suitcase;;;branco/a;white;;;preto/a;black;;;cinzento/a;grey;;;laranja;orange;;;vermelho/a;red;;;amarelo/a;yellow;;;cor-de-rosa;rose;;;verde;green;;;castanho/a;brown;;;roxo/a;purple;;;De que cor é / sao ...;What is / are the colours ...;;;Como está?;Wie geht es Ihnen?;;;Éstas bom?;Are you good?;;;Tudo bem?;All good?;;;o restaurante;the restaurant;;;a piscina;the swimming pool;;;o banco;the bank;;;a escola;the school;;;o cinema;the movie theatre;;;o supermercado;the supermarket;;;só;nur;;;senão;otherwise;;;um namorodo;a boyfriend;;;uma namorada;a girlfriend;;;namorar;to date;;;acho que não / sim;I think so / I do not think so;;;achar;think / find;;;a semana;the week;;;a segunda-feira;Monday;;;a terça-feira;Tuesday;;;a quarta-feira;Wednesday;;;a quinta-feira;Thursday;;;a sexta-feira;Friday;;;o sábado;Saturday;;;o domingo;Sunday;;;os Estados Unidos;the US;;;estar come fome;to be hungry;;;estar com sede;to be thirsty;;;estar com frio;to be cold;;;estar com calor;to be hot;;;estar contente;to be happy;;;estar triste;to be unhappy;;;estar cansado/a;to be tired;;;estar doente;to be sick;;;aberto;open;;;fechado;closed;;;cheio;full;;;vazion;empty;;;ligado;on;;;desligado;off;;;aceso;on (lights);;;apagado;off (lights);;;sujo;dirty;;;limpo;clean;;;seco;dry;;;molhado;wet;;;isto;this (indefinite);;;isso;that (indefinite);;;aquilo;that over there (indefinite);;;aqui;here;;;ai;there;;;ali;over there;;;este/esta estes/estas;this (definite);;;esse/essa esses/essas;that (definite);;;aquele/aquela aqueles/aquelas;that over there (definite);;;\"\nconst terms = \"uma televisão;a TV;;;uma pasta;a briefcase;;;uma mesa;a table;;;uma cadeira;a chair;;;uma porta;a door;;;uma casa;a house;;;uma árvore;a tree;;;uma chave;a key;;;uma janela;a window;;;uma flor;a flower;;;uma caneta;a pen;;;uma carta;a card;;;uma garrafa;a bottle;;;uma chàvena;a tee cup;;;um avião;a plane;;;um copo;a glass\"\nconst  pieces = terms.split(\";;;\");\nlet mc_words =[0];\n// let r1_words =[0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n// let r1_words_this_round = [];\nlet write_words =[];\nlet done_words =[];\n// let words_status = new Array(pieces.length).fill(0);\nlet words_status = [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\nlet words_this_round = [];\nlet new_words_in_round =0;\n\nlet is_answer_loaded = false;\nlet loaded_answer_value = false;\nlet alllow_next_question =false;\n\nlet counter_val = 0;\n\nvar done = false;\n\nconst WM_UNKNOWN = 0;\nconst WM_MC = 1;\nconst WM_WRITE = 2;\nconst WM_DONE = 3;\n\n\nfunction get_new_word()\n{\n  // console.log(mc_words);\n  let familiar_words = mc_words.concat(write_words).concat(done_words);\n  let new_word = familiar_words.length;\n  for (let i = 0 ; i < pieces.length ; i++)\n    {\n      if (!words_this_round.includes(new_word) && !familiar_words.includes(new_word))\n      {\n        // console.log(\"i returned: \" + new_word);\n        return new_word;\n      }\n      new_word++;\n    }\n\n  return mc_words.length;\n\n}\nfunction get_familiar_word()\n{\n  const comb = mc_words.concat(write_words);\n  const difference = comb.filter( x => !words_this_round.includes(x) );\n  if (difference.length > 0)\n  {\n    let new_word = difference[Math.floor(Math.random() * (difference.length))];\n    // console.log(\"i returned2: \" + new_word + \" : \" + mc_words);\n    return new_word;\n  }\n  else \n  {\n    if (pieces.length == comb.length + done_words.length)\n      return comb[Math.floor(Math.random() * (difference.length))]\n    let new_word = get_new_word();\n    console.log(\"newwww \" + new_word);\n    return new_word;\n  }\n}\n\nfunction NextQuestion(is_answerd_right, counter, setCounter)\n{\n  let word_stat = words_status[counter];\n  words_this_round.push(counter);\n\n  if (is_answerd_right)\n  {\n    // console.log(\"word status1 \"+counter);\n    if (word_stat < 3)\n      words_status[counter] = word_stat+1;\n    switch (word_stat)\n    {\n      case 0:\n        mc_words.push(counter);\n        break;\n      case 1:\n        mc_words.splice(mc_words.indexOf(counter), 1)\n        write_words.push(counter);\n        break;\n      case 2:\n        write_words.splice(write_words.indexOf(counter), 1)\n        done_words.push(counter);\n        break;\n        default:\n    }\n  }\n  else\n  {\n    if (word_stat > 1)\n      words_status[counter] = word_stat-1;\n    switch (word_stat)\n    {\n      case 0:\n        // r1_words.push(word_stat);\n        break;\n      case 1:\n        // mc_words.splice(mc_words.indexOf(counter),1);\n        break;\n      case 2:\n        write_words.splice(write_words.indexOf(counter),1);\n        mc_words.push(counter);\n        console.log(\"i pushed to mc2\");\n        break;\n        default:\n    }\n    // console.log(\"wrong answer\");\n  }\n  if (words_this_round.length < 8)\n  {\n    let mc_size = mc_words.length;\n    if (mc_size < 20)\n    {\n      if (new_words_in_round < 2 && mc_size < 10)\n      {\n        let new_counter = get_new_word();\n        // console.log(\"got new word \" + new_counter);\n        words_status[new_counter] = WM_MC;\n        mc_words.push(new_counter);\n        setCounter(new_counter);\n        new_words_in_round++;\n      }\n      else\n      {\n        let new_word = get_familiar_word();\n        if (!mc_words.includes(new_word) && !write_words.includes(new_word))\n        {\n          mc_words.push(new_word);\n          words_status[new_word] = WM_MC;\n        }\n        // console.log(\"got new word 1\" + new_word);\n\n        setCounter(new_word);\n        new_words_in_round++;\n      }\n\n    }\n    else\n    {\n      let new_counter = mc_words[Math.floor(Math.random() * (mc_words.length))];\n      console.log(\"got new word 2\" + new_counter);\n\n      setCounter(new_counter);\n\n      // console.log(\"fun 4\");\n\n    }\n    // words_this_round.p;\n  }\n  else\n  {\n    // console.log(\"hola\");\n    new_words_in_round = 0;\n    words_this_round = [];\n    let new_word = get_familiar_word();\n    if (!mc_words.includes(new_word) && !write_words.includes(new_word))\n    {\n      mc_words.push(new_word);\n      words_status[new_word] = WM_MC;\n    }\n    console.log(\"got new word 3\" + new_word);\n\n    setCounter(new_word);\n    console.log(\"new round \");\n\n    // next round\n  }\n}\n\nfunction load_next_question(is_answered_right)\n{\n  is_answer_loaded = true;\n  loaded_answer_value = is_answered_right;\n  setTimeout(() => { \n    alllow_next_question = true;}, 1000);\n}\n\nfunction trigger_next_question(setCounter)\n{\n  if (alllow_next_question)\n    if (is_answer_loaded)\n    {\n      console.log(\"called \" +\" : \" + counter_val);\n      NextQuestion(loaded_answer_value, counter_val, setCounter);\n      is_answer_loaded = false;\n    }\n}\n\nconst App = () => {\n\n  const [counter, setCounter] = useState(0);\n  const [qType, setQType] = useState(0);\n  const [answer, setAnswer] = useState(0);\n  \n  const handleAnswer = (val) => {\n    // setAnswer(val);\n    load_next_question(val);\n  }\n\n  window.addEventListener('keydown', function(e) {\n    if(e.key == 'Space') {\n      e.preventDefault();\n    }\n  });\n\n  document.addEventListener('keydown', \n  (event) => { \n    if(event.key == ' ') \n      trigger_next_question(setCounter);\n  });\n\n  // let qd =document.getElementById(\"question-div\");\n  // if (qd != null)\n  //   qd.addEventListener('mousedown', \n  //   (event) => {\n  //     console.log(event);\n  //     if (event.button === 0)\n  //     trigger_next_question(setCounter);});\n\n    // document.addEventListener('mousedown', \n    // (event) => {\n    //   console.log(event);\n    //   if (event.button === 0)\n    //   trigger_next_question(setCounter);});\n  \n\n  useEffect(() => {\n\n    if (counter >= 0)\n    {\n      console.log(\"new word is \" + counter);\n      counter_val = counter;\n      // console.log(\"there \" + words_status[counter]);\n      if (words_status[counter] == 1 )\n      {\n        setQType(0); \n        // console.log(\"here\");\n      }\n      else\n      {\n        setQType(1);\n        // r1_words.push(counter);\n        \n      }\n    }   \n},[counter]);\n\n  return (\n    <div className=\"App\">\n    <button onClick={() => NextQuestion(false, counter,setCounter)}>nextQuestion (false)</button>\n    <h1></h1>\n    <button onClick={() => NextQuestion(true, counter,setCounter)}>nextQuestion (true)</button>\n    <h1></h1>\n    {/* <input type=\"text\" id =\"one\" onKeyPress={handleKeyPress}/> */}\n\n    <div id=\"question-div\"\n      onClick={(event) =>  \n          trigger_next_question(setCounter)}>\n    {qType == 0 ?(\n      // <FlashCard counter={counter} pieces = {pieces}/>\n      <MulChoQuestion counter={counter} pieces = {pieces} handleAnswer={handleAnswer}/>\n\n      // <WriteQuestion counter={counter} pieces = {pieces}/>\n\n    )\n      :(\n        <WriteQuestion counter={counter} pieces = {pieces} handleAnswer={handleAnswer}/>\n        // <MulChoQuestion counter={counter} pieces = {pieces}/>\n      )}\n    </div>\n\n    <h1></h1>\n    <button onClick={() => setCounter((prevCounter) => prevCounter-1)}>-</button>\n    <h1>{counter}</h1>\n    <button onClick={() => setCounter((prevCounter) => prevCounter+1)}>+</button>\n    <h1></h1>\n    <button onClick={() => setCounter(Math.floor(Math.random() * (pieces.length)))}>Randomize</button>\n\n    <h1>{mc_words.toString()}</h1>\n    {/* <h1>{pieces[16].toString()}</h1> */}\n\n    <input id=\"write-box\" autoComplete=\"off\" placeholder='Insert text'\n       />\n    <h1>{write_words.toString()}</h1>\n    <h1>{done_words.toString()}</h1>\n    <h1>{words_status.toString()}</h1>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}