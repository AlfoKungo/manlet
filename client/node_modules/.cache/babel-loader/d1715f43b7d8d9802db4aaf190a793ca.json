{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gal\\\\Desktop\\\\manlet\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport FlashCard from './Questions/FlashCardQuestion';\nimport MulChoQuestion from './Questions/MulChoQuestion';\nimport WriteQuestion from './Questions/WriteQuestion';\nimport './App.css'; // const terms = \"uma televisão;a TV;;;uma pasta;a briefcase;;;uma mesa;a table;;;uma cadeira;a chair;;;uma porta;a door;;;uma casa;a house;;;uma árvore;a tree;;;uma chave;a key;;;uma janela;a window;;;uma flor;a flower;;;uma caneta;a pen;;;uma carta;a card;;;uma garrafa;a bottle;;;uma chàvena;a tee cup;;;um avião;a plane;;;um copo;a glass;;;um candeeiro;a lamp;;;um telefone;a telephone;;;um rádio;a radio;;;um livro;a book;;;um cão;a dog;;;um gato;a cat;;;um computador;a computer;;;um mapa;a map;;;um cinzeiro;an ashtray;;;um cigarro;a cigarette;;;um barco;a boat;;;um relógio;a clock;;;um carro;a car;;;um lápis;a pencil;;;os livros;books;;;as mesas;tables;;;um rapaz;a boy;;;rapazes;boys;;;o mês;the month;;;meses;months;;;um homen;a man;;;os homens;men;;;bom;good (Sg.);;;bons;good (Pl.);;;o jornal;the newspaper;;;os jornais;newspaper (Pl.);;;o papel;the paper;;;os papéis;sheets of paper (pl.);;;azul;blue;;;azuis;blue (pl.);;;a mão;the hand;;;as mâos;hands;;;o limão;the lemon;;;os limões;lemons;;;o cão;the dog;;;os cães;dog;;;dois lápis;two pencils;;;grande;big;;;pequeno;small;;;grosso;thick;;;fino;thin;;;forte;strong;;;fraco;weak;;;velho;old (objects & people);;;novo;new (objects);;;jovem;young (people & animal);;;curto;short;;;comprido;long;;;gordo;fat;;;magro;skinny;;;alto;tall;;;baixo;short;;;bonito;beautiful;;;feio;ugly;;;rico;rich;;;pobre;poor;;;caro;expensive;;;barato;cheap;;;em cima de;on top of;;;debaixo de;under;;;por cima de;above;;;dentro de;inside;;;fora de;outside of;;;à frente de;in front of;;;atrás de;behind;;;em frente de/a;in front of (facing each other) / opposite;;;ao lado de;next to;;;entre ... e ...;in between;;;mal;schlecht, schlimm;;;bem;gut;;;meu bem;mein Schatz;;;uma mala;a suitcase;;;branco/a;white;;;preto/a;black;;;cinzento/a;grey;;;laranja;orange;;;vermelho/a;red;;;amarelo/a;yellow;;;cor-de-rosa;rose;;;verde;green;;;castanho/a;brown;;;roxo/a;purple;;;De que cor é / sao ...;What is / are the colours ...;;;Como está?;Wie geht es Ihnen?;;;Éstas bom?;Are you good?;;;Tudo bem?;All good?;;;o restaurante;the restaurant;;;a piscina;the swimming pool;;;o banco;the bank;;;a escola;the school;;;o cinema;the movie theatre;;;o supermercado;the supermarket;;;só;nur;;;senão;otherwise;;;um namorodo;a boyfriend;;;uma namorada;a girlfriend;;;namorar;to date;;;acho que não / sim;I think so / I do not think so;;;achar;think / find;;;a semana;the week;;;a segunda-feira;Monday;;;a terça-feira;Tuesday;;;a quarta-feira;Wednesday;;;a quinta-feira;Thursday;;;a sexta-feira;Friday;;;o sábado;Saturday;;;o domingo;Sunday;;;os Estados Unidos;the US;;;estar come fome;to be hungry;;;estar com sede;to be thirsty;;;estar com frio;to be cold;;;estar com calor;to be hot;;;estar contente;to be happy;;;estar triste;to be unhappy;;;estar cansado/a;to be tired;;;estar doente;to be sick;;;aberto;open;;;fechado;closed;;;cheio;full;;;vazion;empty;;;ligado;on;;;desligado;off;;;aceso;on (lights);;;apagado;off (lights);;;sujo;dirty;;;limpo;clean;;;seco;dry;;;molhado;wet;;;isto;this (indefinite);;;isso;that (indefinite);;;aquilo;that over there (indefinite);;;aqui;here;;;ai;there;;;ali;over there;;;este/esta estes/estas;this (definite);;;esse/essa esses/essas;that (definite);;;aquele/aquela aqueles/aquelas;that over there (definite);;;\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst terms = \"uma televisão;a TV;;;uma pasta;a briefcase;;;uma mesa;a table;;;uma cadeira;a chair;;;uma porta;a door;;;uma casa;a house;;;uma árvore;a tree;;;uma chave;a key;;;uma janela;a window;;;uma flor;a flower;;;uma caneta;a pen;;;uma carta;a card;;;uma garrafa;a bottle;;;uma chàvena;a tee cup;;;um avião;a plane;;;um copo;a glass;;;\";\nconst pieces = terms.split(\";;;\");\nlet r1_words = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet r1_words_this_round = [];\nlet r2_words = [];\nlet words_status = new Array(pieces.length).fill(0);\n;\nlet done_words = [];\nlet words_in_this_round = 0;\nlet new_words_in_round = 0;\nvar done = false;\n\nfunction find_new_word() {\n  // console.log(r1_words);\n  return r1_words.length;\n}\n\nfunction find_new_words_from_r1() {\n  const difference = r1_words.filter(x => !r1_words_this_round.includes(x));\n  return difference[Math.floor(Math.random() * difference.length)];\n}\n\nfunction NextQuestion(is_answerd_right, counter, setCounter) {\n  let word_stat = words_status[counter];\n\n  if (is_answerd_right) {\n    if (word_stat < 2) words_status[counter] = word_stat + 1;\n\n    switch (word_stat) {\n      case 0:\n        r1_words.push(word_stat);\n        break;\n\n      case 1:\n        r1_words.splice(r1_words.indexOf(counter));\n        r2_words.push(word_stat);\n        break;\n\n      default:\n    }\n  } else {\n    if (word_stat > 0) words_status[counter] = word_stat - 1;\n\n    switch (word_stat) {\n      case 0:\n        r1_words.push(word_stat);\n        break;\n\n      case 1:\n        r1_words.splice(r1_words.indexOf(counter));\n        break;\n\n      case 2:\n        r1_words.splice(r1_words.indexOf(counter));\n        r2_words.push(word_stat);\n        break;\n\n      default:\n    }\n  }\n\n  if (words_in_this_round < 10) {\n    let r1_size = r1_words.length;\n\n    if (r1_size < 20) {\n      if (new_words_in_round < 2) {\n        setCounter(find_new_word());\n        new_words_in_round++;\n      } else {\n        if (r1_size > r1_words_this_round.length) {\n          let new_word = find_new_words_from_r1();\n          r1_words_this_round.push(new_word);\n          words_status[new_word] = 1;\n          setCounter(new_word);\n        } else {\n          setCounter(find_new_word());\n          new_words_in_round++;\n        }\n      }\n    } else {\n      let new_counter = r1_words[Math.floor(Math.random() * r1_words.length)];\n      setCounter(new_counter);\n    }\n\n    words_in_this_round++;\n  } else {\n    r1_words_this_round = []; // next round\n  }\n}\n\n_c = NextQuestion;\n\nconst App = () => {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n  const [qType, setQType] = useState(0);\n\n  for (let i = 0; i < 10; i++) words_status[i] = 1;\n\n  console.log(words_status);\n  useEffect(() => {\n    if (counter >= 0) {\n      // console.log(famWords);\n      console.log(\"new word is \" + counter);\n\n      if (r1_words.includes(counter)) {\n        setQType(1); // console.log(\"here\");\n      } else {\n        setQType(0);\n        r1_words.push(counter); // console.log(\"there\");\n      }\n    }\n\n    $(window).trigger('resize');\n  }, [counter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"nigga\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }, this), qType == 0 ?\n    /*#__PURE__*/\n    // <FlashCard counter={counter} pieces = {pieces}/>\n    _jsxDEV(MulChoQuestion, {\n      counter: counter,\n      pieces: pieces\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this) // <WriteQuestion counter={counter} pieces = {pieces}/>\n    : /*#__PURE__*/_jsxDEV(WriteQuestion, {\n      counter: counter,\n      pieces: pieces\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this) // <MulChoQuestion counter={counter} pieces = {pieces}/>\n    , /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => NextQuestion(false, counter, setCounter),\n      children: \"nextQuestion (false)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => NextQuestion(true, counter, setCounter),\n      children: \"nextQuestion (true)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCounter(prevCounter => prevCounter - 1),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCounter(prevCounter => prevCounter + 1),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCounter(Math.floor(Math.random() * pieces.length)),\n      children: \"Randomize\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: r1_words\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: r1_words_this_round\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: r2_words\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: words_status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"pXz2ZqCOZ+oj/N/iS7hRLQ1m8Yc=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NextQuestion\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useEffect","useState","FlashCard","MulChoQuestion","WriteQuestion","terms","pieces","split","r1_words","r1_words_this_round","r2_words","words_status","Array","length","fill","done_words","words_in_this_round","new_words_in_round","done","find_new_word","find_new_words_from_r1","difference","filter","x","includes","Math","floor","random","NextQuestion","is_answerd_right","counter","setCounter","word_stat","push","splice","indexOf","r1_size","new_word","new_counter","App","qType","setQType","i","console","log","$","window","trigger","prevCounter"],"sources":["C:/Users/gal/Desktop/manlet/src/App.js"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport FlashCard from './Questions/FlashCardQuestion'\nimport MulChoQuestion from './Questions/MulChoQuestion'\nimport WriteQuestion from './Questions/WriteQuestion'\n\n\nimport './App.css';\n\n\n\n\n// const terms = \"uma televisão;a TV;;;uma pasta;a briefcase;;;uma mesa;a table;;;uma cadeira;a chair;;;uma porta;a door;;;uma casa;a house;;;uma árvore;a tree;;;uma chave;a key;;;uma janela;a window;;;uma flor;a flower;;;uma caneta;a pen;;;uma carta;a card;;;uma garrafa;a bottle;;;uma chàvena;a tee cup;;;um avião;a plane;;;um copo;a glass;;;um candeeiro;a lamp;;;um telefone;a telephone;;;um rádio;a radio;;;um livro;a book;;;um cão;a dog;;;um gato;a cat;;;um computador;a computer;;;um mapa;a map;;;um cinzeiro;an ashtray;;;um cigarro;a cigarette;;;um barco;a boat;;;um relógio;a clock;;;um carro;a car;;;um lápis;a pencil;;;os livros;books;;;as mesas;tables;;;um rapaz;a boy;;;rapazes;boys;;;o mês;the month;;;meses;months;;;um homen;a man;;;os homens;men;;;bom;good (Sg.);;;bons;good (Pl.);;;o jornal;the newspaper;;;os jornais;newspaper (Pl.);;;o papel;the paper;;;os papéis;sheets of paper (pl.);;;azul;blue;;;azuis;blue (pl.);;;a mão;the hand;;;as mâos;hands;;;o limão;the lemon;;;os limões;lemons;;;o cão;the dog;;;os cães;dog;;;dois lápis;two pencils;;;grande;big;;;pequeno;small;;;grosso;thick;;;fino;thin;;;forte;strong;;;fraco;weak;;;velho;old (objects & people);;;novo;new (objects);;;jovem;young (people & animal);;;curto;short;;;comprido;long;;;gordo;fat;;;magro;skinny;;;alto;tall;;;baixo;short;;;bonito;beautiful;;;feio;ugly;;;rico;rich;;;pobre;poor;;;caro;expensive;;;barato;cheap;;;em cima de;on top of;;;debaixo de;under;;;por cima de;above;;;dentro de;inside;;;fora de;outside of;;;à frente de;in front of;;;atrás de;behind;;;em frente de/a;in front of (facing each other) / opposite;;;ao lado de;next to;;;entre ... e ...;in between;;;mal;schlecht, schlimm;;;bem;gut;;;meu bem;mein Schatz;;;uma mala;a suitcase;;;branco/a;white;;;preto/a;black;;;cinzento/a;grey;;;laranja;orange;;;vermelho/a;red;;;amarelo/a;yellow;;;cor-de-rosa;rose;;;verde;green;;;castanho/a;brown;;;roxo/a;purple;;;De que cor é / sao ...;What is / are the colours ...;;;Como está?;Wie geht es Ihnen?;;;Éstas bom?;Are you good?;;;Tudo bem?;All good?;;;o restaurante;the restaurant;;;a piscina;the swimming pool;;;o banco;the bank;;;a escola;the school;;;o cinema;the movie theatre;;;o supermercado;the supermarket;;;só;nur;;;senão;otherwise;;;um namorodo;a boyfriend;;;uma namorada;a girlfriend;;;namorar;to date;;;acho que não / sim;I think so / I do not think so;;;achar;think / find;;;a semana;the week;;;a segunda-feira;Monday;;;a terça-feira;Tuesday;;;a quarta-feira;Wednesday;;;a quinta-feira;Thursday;;;a sexta-feira;Friday;;;o sábado;Saturday;;;o domingo;Sunday;;;os Estados Unidos;the US;;;estar come fome;to be hungry;;;estar com sede;to be thirsty;;;estar com frio;to be cold;;;estar com calor;to be hot;;;estar contente;to be happy;;;estar triste;to be unhappy;;;estar cansado/a;to be tired;;;estar doente;to be sick;;;aberto;open;;;fechado;closed;;;cheio;full;;;vazion;empty;;;ligado;on;;;desligado;off;;;aceso;on (lights);;;apagado;off (lights);;;sujo;dirty;;;limpo;clean;;;seco;dry;;;molhado;wet;;;isto;this (indefinite);;;isso;that (indefinite);;;aquilo;that over there (indefinite);;;aqui;here;;;ai;there;;;ali;over there;;;este/esta estes/estas;this (definite);;;esse/essa esses/essas;that (definite);;;aquele/aquela aqueles/aquelas;that over there (definite);;;\"\nconst terms = \"uma televisão;a TV;;;uma pasta;a briefcase;;;uma mesa;a table;;;uma cadeira;a chair;;;uma porta;a door;;;uma casa;a house;;;uma árvore;a tree;;;uma chave;a key;;;uma janela;a window;;;uma flor;a flower;;;uma caneta;a pen;;;uma carta;a card;;;uma garrafa;a bottle;;;uma chàvena;a tee cup;;;um avião;a plane;;;um copo;a glass;;;\"\nconst  pieces = terms.split(\";;;\");\nlet r1_words =[0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nlet r1_words_this_round = [];\nlet r2_words =[];\nlet words_status = new Array(pieces.length).fill(0);;\nlet done_words =[];\nlet words_in_this_round =0;\nlet new_words_in_round =0;\n\nvar done = false;\n\n\nfunction find_new_word()\n{\n  // console.log(r1_words);\n\n  return r1_words.length;\n\n}\nfunction find_new_words_from_r1()\n{\n  const difference = r1_words.filter( x => !r1_words_this_round.includes(x) );\n  return difference[Math.floor(Math.random() * (difference.length))];\n}\n\nfunction NextQuestion(is_answerd_right, counter, setCounter)\n{\n  let word_stat = words_status[counter];\n\n  if (is_answerd_right)\n  {\n    if (word_stat < 2)\n      words_status[counter] = word_stat+1;\n    switch (word_stat)\n    {\n      case 0:\n        r1_words.push(word_stat);\n        break;\n      case 1:\n        r1_words.splice(r1_words.indexOf(counter))\n        r2_words.push(word_stat);\n        break;\n        default:\n    }\n  }\n  else\n  {\n    if (word_stat > 0)\n      words_status[counter] = word_stat-1;\n    switch (word_stat)\n    {\n      case 0:\n        r1_words.push(word_stat);\n        break;\n      case 1:\n        r1_words.splice(r1_words.indexOf(counter))\n        break;\n      case 2:\n        r1_words.splice(r1_words.indexOf(counter))\n        r2_words.push(word_stat);\n        break;\n        default:\n    }\n  }\n  if (words_in_this_round < 10)\n  {\n    let r1_size = r1_words.length;\n    if (r1_size < 20)\n    {\n      if (new_words_in_round < 2)\n      {\n        setCounter(find_new_word());\n        new_words_in_round++;\n      }\n      else\n      {\n        if (r1_size > r1_words_this_round.length)\n        {\n          let new_word = find_new_words_from_r1();\n\n          r1_words_this_round.push(new_word);\n          words_status[new_word] = 1;\n          setCounter(new_word);\n        }\n        else\n        {\n          setCounter(find_new_word());\n          new_words_in_round++;\n        }\n      }\n\n    }\n    else\n    {\n      let new_counter = r1_words[Math.floor(Math.random() * (r1_words.length))];\n      setCounter(new_counter);\n    }\n    words_in_this_round++;\n  }\n  else\n  {\n    r1_words_this_round = [];\n    // next round\n  }\n\n}\n\nconst App = () => {\n\n  const [counter, setCounter] = useState(0);\n  const [qType, setQType] = useState(0);\n  \n  for (let i =0; i< 10 ; i++)\n    words_status[i] = 1;\n\n  console.log(words_status);\n  useEffect(() => {\n\n    if (counter >= 0)\n    {\n      // console.log(famWords);\n      console.log(\"new word is \" + counter);\n      if (r1_words.includes(counter))\n      {\n        setQType(1); \n        // console.log(\"here\");\n      }\n      else\n      {\n        setQType(0);\n        r1_words.push(counter);\n        // console.log(\"there\");\n        \n      }\n    }\n    $(window).trigger('resize');\n},[counter]);\n\n  return (\n    <div className=\"App\">\n    <h1>nigga</h1>\n    {qType == 0 ?(\n      // <FlashCard counter={counter} pieces = {pieces}/>\n      <MulChoQuestion counter={counter} pieces = {pieces}/>\n\n      // <WriteQuestion counter={counter} pieces = {pieces}/>\n\n    )\n      :(\n        <WriteQuestion counter={counter} pieces = {pieces}/>\n        // <MulChoQuestion counter={counter} pieces = {pieces}/>\n      )}\n    <h1></h1>\n    <button onClick={() => NextQuestion(false, counter,setCounter)}>nextQuestion (false)</button>\n    <h1></h1>\n    <button onClick={() => NextQuestion(true, counter,setCounter)}>nextQuestion (true)</button>\n    <h1></h1>\n    <button onClick={() => setCounter((prevCounter) => prevCounter-1)}>-</button>\n    <h1>{counter}</h1>\n    <button onClick={() => setCounter((prevCounter) => prevCounter+1)}>+</button>\n    <h1></h1>\n    <button onClick={() => setCounter(Math.floor(Math.random() * (pieces.length)))}>Randomize</button>\n\n    <h1>{r1_words}</h1>\n    <h1>{r1_words_this_round}</h1>\n    <h1>{r2_words}</h1>\n    <h1>{words_status}</h1>\n\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AAGA,OAAO,WAAP,C,CAKA;;;AACA,MAAMC,KAAK,GAAG,wUAAd;AACA,MAAOC,MAAM,GAAGD,KAAK,CAACE,KAAN,CAAY,KAAZ,CAAhB;AACA,IAAIC,QAAQ,GAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAAd;AACA,IAAIC,mBAAmB,GAAG,EAA1B;AACA,IAAIC,QAAQ,GAAE,EAAd;AACA,IAAIC,YAAY,GAAG,IAAIC,KAAJ,CAAUN,MAAM,CAACO,MAAjB,EAAyBC,IAAzB,CAA8B,CAA9B,CAAnB;AAAoD;AACpD,IAAIC,UAAU,GAAE,EAAhB;AACA,IAAIC,mBAAmB,GAAE,CAAzB;AACA,IAAIC,kBAAkB,GAAE,CAAxB;AAEA,IAAIC,IAAI,GAAG,KAAX;;AAGA,SAASC,aAAT,GACA;EACE;EAEA,OAAOX,QAAQ,CAACK,MAAhB;AAED;;AACD,SAASO,sBAAT,GACA;EACE,MAAMC,UAAU,GAAGb,QAAQ,CAACc,MAAT,CAAiBC,CAAC,IAAI,CAACd,mBAAmB,CAACe,QAApB,CAA6BD,CAA7B,CAAvB,CAAnB;EACA,OAAOF,UAAU,CAACI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAiBN,UAAU,CAACR,MAAvC,CAAD,CAAjB;AACD;;AAED,SAASe,YAAT,CAAsBC,gBAAtB,EAAwCC,OAAxC,EAAiDC,UAAjD,EACA;EACE,IAAIC,SAAS,GAAGrB,YAAY,CAACmB,OAAD,CAA5B;;EAEA,IAAID,gBAAJ,EACA;IACE,IAAIG,SAAS,GAAG,CAAhB,EACErB,YAAY,CAACmB,OAAD,CAAZ,GAAwBE,SAAS,GAAC,CAAlC;;IACF,QAAQA,SAAR;MAEE,KAAK,CAAL;QACExB,QAAQ,CAACyB,IAAT,CAAcD,SAAd;QACA;;MACF,KAAK,CAAL;QACExB,QAAQ,CAAC0B,MAAT,CAAgB1B,QAAQ,CAAC2B,OAAT,CAAiBL,OAAjB,CAAhB;QACApB,QAAQ,CAACuB,IAAT,CAAcD,SAAd;QACA;;MACA;IATJ;EAWD,CAfD,MAiBA;IACE,IAAIA,SAAS,GAAG,CAAhB,EACErB,YAAY,CAACmB,OAAD,CAAZ,GAAwBE,SAAS,GAAC,CAAlC;;IACF,QAAQA,SAAR;MAEE,KAAK,CAAL;QACExB,QAAQ,CAACyB,IAAT,CAAcD,SAAd;QACA;;MACF,KAAK,CAAL;QACExB,QAAQ,CAAC0B,MAAT,CAAgB1B,QAAQ,CAAC2B,OAAT,CAAiBL,OAAjB,CAAhB;QACA;;MACF,KAAK,CAAL;QACEtB,QAAQ,CAAC0B,MAAT,CAAgB1B,QAAQ,CAAC2B,OAAT,CAAiBL,OAAjB,CAAhB;QACApB,QAAQ,CAACuB,IAAT,CAAcD,SAAd;QACA;;MACA;IAZJ;EAcD;;EACD,IAAIhB,mBAAmB,GAAG,EAA1B,EACA;IACE,IAAIoB,OAAO,GAAG5B,QAAQ,CAACK,MAAvB;;IACA,IAAIuB,OAAO,GAAG,EAAd,EACA;MACE,IAAInB,kBAAkB,GAAG,CAAzB,EACA;QACEc,UAAU,CAACZ,aAAa,EAAd,CAAV;QACAF,kBAAkB;MACnB,CAJD,MAMA;QACE,IAAImB,OAAO,GAAG3B,mBAAmB,CAACI,MAAlC,EACA;UACE,IAAIwB,QAAQ,GAAGjB,sBAAsB,EAArC;UAEAX,mBAAmB,CAACwB,IAApB,CAAyBI,QAAzB;UACA1B,YAAY,CAAC0B,QAAD,CAAZ,GAAyB,CAAzB;UACAN,UAAU,CAACM,QAAD,CAAV;QACD,CAPD,MASA;UACEN,UAAU,CAACZ,aAAa,EAAd,CAAV;UACAF,kBAAkB;QACnB;MACF;IAEF,CAxBD,MA0BA;MACE,IAAIqB,WAAW,GAAG9B,QAAQ,CAACiB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAiBnB,QAAQ,CAACK,MAArC,CAAD,CAA1B;MACAkB,UAAU,CAACO,WAAD,CAAV;IACD;;IACDtB,mBAAmB;EACpB,CAlCD,MAoCA;IACEP,mBAAmB,GAAG,EAAtB,CADF,CAEE;EACD;AAEF;;KAhFQmB,Y;;AAkFT,MAAMW,GAAG,GAAG,MAAM;EAAA;;EAEhB,MAAM,CAACT,OAAD,EAAUC,UAAV,IAAwB9B,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM,CAACuC,KAAD,EAAQC,QAAR,IAAoBxC,QAAQ,CAAC,CAAD,CAAlC;;EAEA,KAAK,IAAIyC,CAAC,GAAE,CAAZ,EAAeA,CAAC,GAAE,EAAlB,EAAuBA,CAAC,EAAxB,EACE/B,YAAY,CAAC+B,CAAD,CAAZ,GAAkB,CAAlB;;EAEFC,OAAO,CAACC,GAAR,CAAYjC,YAAZ;EACAX,SAAS,CAAC,MAAM;IAEd,IAAI8B,OAAO,IAAI,CAAf,EACA;MACE;MACAa,OAAO,CAACC,GAAR,CAAY,iBAAiBd,OAA7B;;MACA,IAAItB,QAAQ,CAACgB,QAAT,CAAkBM,OAAlB,CAAJ,EACA;QACEW,QAAQ,CAAC,CAAD,CAAR,CADF,CAEE;MACD,CAJD,MAMA;QACEA,QAAQ,CAAC,CAAD,CAAR;QACAjC,QAAQ,CAACyB,IAAT,CAAcH,OAAd,EAFF,CAGE;MAED;IACF;;IACDe,CAAC,CAACC,MAAD,CAAD,CAAUC,OAAV,CAAkB,QAAlB;EACH,CApBU,EAoBT,CAACjB,OAAD,CApBS,CAAT;EAsBA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACA;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,EAECU,KAAK,IAAI,CAAT;IAAA;IACC;IACA,QAAC,cAAD;MAAgB,OAAO,EAAEV,OAAzB;MAAkC,MAAM,EAAIxB;IAA5C;MAAA;MAAA;MAAA;IAAA,QAFD,CAIC;IAJD,eAQG,QAAC,aAAD;MAAe,OAAO,EAAEwB,OAAxB;MAAiC,MAAM,EAAIxB;IAA3C;MAAA;MAAA;MAAA;IAAA,QARH,CASG;IAXJ,eAaA;MAAA;MAAA;MAAA;IAAA,QAbA,eAcA;MAAQ,OAAO,EAAE,MAAMsB,YAAY,CAAC,KAAD,EAAQE,OAAR,EAAgBC,UAAhB,CAAnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAdA,eAeA;MAAA;MAAA;MAAA;IAAA,QAfA,eAgBA;MAAQ,OAAO,EAAE,MAAMH,YAAY,CAAC,IAAD,EAAOE,OAAP,EAAeC,UAAf,CAAnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAhBA,eAiBA;MAAA;MAAA;MAAA;IAAA,QAjBA,eAkBA;MAAQ,OAAO,EAAE,MAAMA,UAAU,CAAEiB,WAAD,IAAiBA,WAAW,GAAC,CAA9B,CAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAlBA,eAmBA;MAAA,UAAKlB;IAAL;MAAA;MAAA;MAAA;IAAA,QAnBA,eAoBA;MAAQ,OAAO,EAAE,MAAMC,UAAU,CAAEiB,WAAD,IAAiBA,WAAW,GAAC,CAA9B,CAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QApBA,eAqBA;MAAA;MAAA;MAAA;IAAA,QArBA,eAsBA;MAAQ,OAAO,EAAE,MAAMjB,UAAU,CAACN,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAiBrB,MAAM,CAACO,MAAnC,CAAD,CAAjC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAtBA,eAwBA;MAAA,UAAKL;IAAL;MAAA;MAAA;MAAA;IAAA,QAxBA,eAyBA;MAAA,UAAKC;IAAL;MAAA;MAAA;MAAA;IAAA,QAzBA,eA0BA;MAAA,UAAKC;IAAL;MAAA;MAAA;MAAA;IAAA,QA1BA,eA2BA;MAAA,UAAKC;IAAL;MAAA;MAAA;MAAA;IAAA,QA3BA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiCD,CAhED;;GAAM4B,G;;MAAAA,G;AAkEN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}