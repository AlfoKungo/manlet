{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gal\\\\Desktop\\\\manlet\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport FlashCard from './Questions/FlashCardQuestion';\nimport MulChoQuestion from './Questions/MulChoQuestion';\nimport WriteQuestion from './Questions/WriteQuestion';\nimport './App.css'; // const terms = \"uma televisão;a TV;;;uma pasta;a briefcase;;;uma mesa;a table;;;uma cadeira;a chair;;;uma porta;a door;;;uma casa;a house;;;uma árvore;a tree;;;uma chave;a key;;;uma janela;a window;;;uma flor;a flower;;;uma caneta;a pen;;;uma carta;a card;;;uma garrafa;a bottle;;;uma chàvena;a tee cup;;;um avião;a plane;;;um copo;a glass;;;um candeeiro;a lamp;;;um telefone;a telephone;;;um rádio;a radio;;;um livro;a book;;;um cão;a dog;;;um gato;a cat;;;um computador;a computer;;;um mapa;a map;;;um cinzeiro;an ashtray;;;um cigarro;a cigarette;;;um barco;a boat;;;um relógio;a clock;;;um carro;a car;;;um lápis;a pencil;;;os livros;books;;;as mesas;tables;;;um rapaz;a boy;;;rapazes;boys;;;o mês;the month;;;meses;months;;;um homen;a man;;;os homens;men;;;bom;good (Sg.);;;bons;good (Pl.);;;o jornal;the newspaper;;;os jornais;newspaper (Pl.);;;o papel;the paper;;;os papéis;sheets of paper (pl.);;;azul;blue;;;azuis;blue (pl.);;;a mão;the hand;;;as mâos;hands;;;o limão;the lemon;;;os limões;lemons;;;o cão;the dog;;;os cães;dog;;;dois lápis;two pencils;;;grande;big;;;pequeno;small;;;grosso;thick;;;fino;thin;;;forte;strong;;;fraco;weak;;;velho;old (objects & people);;;novo;new (objects);;;jovem;young (people & animal);;;curto;short;;;comprido;long;;;gordo;fat;;;magro;skinny;;;alto;tall;;;baixo;short;;;bonito;beautiful;;;feio;ugly;;;rico;rich;;;pobre;poor;;;caro;expensive;;;barato;cheap;;;em cima de;on top of;;;debaixo de;under;;;por cima de;above;;;dentro de;inside;;;fora de;outside of;;;à frente de;in front of;;;atrás de;behind;;;em frente de/a;in front of (facing each other) / opposite;;;ao lado de;next to;;;entre ... e ...;in between;;;mal;schlecht, schlimm;;;bem;gut;;;meu bem;mein Schatz;;;uma mala;a suitcase;;;branco/a;white;;;preto/a;black;;;cinzento/a;grey;;;laranja;orange;;;vermelho/a;red;;;amarelo/a;yellow;;;cor-de-rosa;rose;;;verde;green;;;castanho/a;brown;;;roxo/a;purple;;;De que cor é / sao ...;What is / are the colours ...;;;Como está?;Wie geht es Ihnen?;;;Éstas bom?;Are you good?;;;Tudo bem?;All good?;;;o restaurante;the restaurant;;;a piscina;the swimming pool;;;o banco;the bank;;;a escola;the school;;;o cinema;the movie theatre;;;o supermercado;the supermarket;;;só;nur;;;senão;otherwise;;;um namorodo;a boyfriend;;;uma namorada;a girlfriend;;;namorar;to date;;;acho que não / sim;I think so / I do not think so;;;achar;think / find;;;a semana;the week;;;a segunda-feira;Monday;;;a terça-feira;Tuesday;;;a quarta-feira;Wednesday;;;a quinta-feira;Thursday;;;a sexta-feira;Friday;;;o sábado;Saturday;;;o domingo;Sunday;;;os Estados Unidos;the US;;;estar come fome;to be hungry;;;estar com sede;to be thirsty;;;estar com frio;to be cold;;;estar com calor;to be hot;;;estar contente;to be happy;;;estar triste;to be unhappy;;;estar cansado/a;to be tired;;;estar doente;to be sick;;;aberto;open;;;fechado;closed;;;cheio;full;;;vazion;empty;;;ligado;on;;;desligado;off;;;aceso;on (lights);;;apagado;off (lights);;;sujo;dirty;;;limpo;clean;;;seco;dry;;;molhado;wet;;;isto;this (indefinite);;;isso;that (indefinite);;;aquilo;that over there (indefinite);;;aqui;here;;;ai;there;;;ali;over there;;;este/esta estes/estas;this (definite);;;esse/essa esses/essas;that (definite);;;aquele/aquela aqueles/aquelas;that over there (definite);;;\"\n// const terms = \"uma televisão;a TV;;;uma pasta;a briefcase;;;uma mesa;a table;;;uma cadeira;a chair;;;uma porta;a door;;;uma casa;a house;;;uma árvore;a tree;;;uma chave;a key;;;uma janela;a window;;;uma flor;a flower;;;uma caneta;a pen;;;uma carta;a card;;;uma garrafa;a bottle;;;uma chàvena;a tee cup;;;um avião;a plane;;;um copo;a glass\"\n// let  pieces = terms.split(\";;;\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet pieces = \"\";\nlet mc_words = []; // let r1_words =[0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n// let r1_words_this_round = [];\n\nlet write_words = [];\nlet done_words = []; // let words_status = new Array(pieces.length).fill(0);\n// let words_status = [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\n\nlet words_status = [1, 1, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; // let words_status = [2,3,3,3,3,3,2,2,2,1,0,0,0,0,0,0];\n// let words_status = [2, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 1, 1];\n\nlet words_this_round = [];\nlet new_words_in_round = 0; // let is_answer_loaded = false;\n\nlet loaded_answer_value = false;\nlet is_allow_next_question = false;\nlet is_nextQue = false;\nlet counter_val = 0;\nvar done = false;\nconst WM_UNKNOWN = 0;\nconst WM_MC = 1;\nconst WM_WRITE = 2;\nconst WM_DONE = 3;\n\nfunction set_by_words_status() {\n  for (let i = 0; i < words_status.length; i++) {\n    let ws = words_status[i];\n    if (ws == WM_MC) mc_words.push(i);\n    if (ws == WM_WRITE) write_words.push(i);\n    if (ws == WM_DONE) done_words.push(i);\n  }\n}\n\nfunction get_new_word() {\n  if (!words_status.includes(0)) return get_familiar_word(); // return words_status.findIndex((ele) => ele == 0);\n\n  return words_status.indexOf(0);\n}\n\nfunction get_familiar_word() {\n  // return 0;\n  const comb = mc_words.concat(write_words);\n  const difference = comb.filter(x => !words_this_round.includes(x));\n\n  if (difference.length > 0) {\n    let new_word = difference[Math.floor(Math.random() * difference.length)];\n    return new_word;\n  } else {\n    if (pieces.length == comb.length + done_words.length) return comb[Math.floor(Math.random() * difference.length)];\n    let new_word = get_new_word();\n    console.log(\"newwww \" + new_word);\n    return new_word;\n  }\n}\n\nfunction NextQuestion(is_answerd_right, counter, setCounter, setQType, setStageCounter) {\n  let word_stat = words_status[counter];\n  words_this_round.push(counter);\n\n  if (is_answerd_right) {\n    if (word_stat < 3) words_status[counter] = word_stat + 1;\n\n    switch (word_stat) {\n      case 0:\n        mc_words.push(counter);\n        break;\n\n      case 1:\n        mc_words.splice(mc_words.indexOf(counter), 1);\n        write_words.push(counter);\n        break;\n\n      case 2:\n        write_words.splice(write_words.indexOf(counter), 1);\n        done_words.push(counter);\n        break;\n\n      default:\n    }\n  } else {\n    if (word_stat > 1) words_status[counter] = word_stat - 1;\n\n    switch (word_stat) {\n      case 0:\n        break;\n\n      case 1:\n        break;\n\n      case 2:\n        write_words.splice(write_words.indexOf(counter), 1);\n        mc_words.push(counter);\n        break;\n\n      default:\n    }\n  }\n\n  if (words_this_round.length < 8) {\n    let mc_size = mc_words.length;\n\n    if (mc_size < 20) {\n      if (new_words_in_round < 2 && mc_size < 10) {\n        let new_counter = get_new_word();\n        words_status[new_counter] = WM_MC;\n        mc_words.push(new_counter);\n        console.log(\"nigaa 1 \");\n        updateCounter(setCounter, new_counter, setQType, setStageCounter);\n        new_words_in_round++;\n      } else {\n        let new_word = get_familiar_word();\n\n        if (!mc_words.includes(new_word) && !write_words.includes(new_word)) {\n          mc_words.push(new_word);\n          words_status[new_word] = WM_MC;\n        }\n\n        console.log(\"nigaa 2 \");\n        updateCounter(setCounter, new_word, setQType, setStageCounter);\n        new_words_in_round++;\n      }\n    } else {\n      let new_counter = mc_words[Math.floor(Math.random() * mc_words.length)];\n      updateCounter(setCounter, new_counter, setQType, setStageCounter);\n    }\n  } else {\n    new_words_in_round = 0;\n    words_this_round = [];\n    let new_word = get_familiar_word();\n\n    if (!mc_words.includes(new_word) && !write_words.includes(new_word)) {\n      mc_words.push(new_word);\n      words_status[new_word] = WM_MC;\n    }\n\n    console.log(\"nigaa 3 \");\n    updateCounter(setCounter, new_word, setQType, setStageCounter); // next round\n  }\n}\n\n_c = NextQuestion;\n\nfunction allow_next_question(setNextQue) {\n  is_allow_next_question = true;\n  setNextQue(true);\n}\n\nfunction load_next_question(is_answered_right, setNextQue) {\n  loaded_answer_value = is_answered_right;\n  setTimeout(() => {\n    allow_next_question(setNextQue);\n  }, 200);\n}\n\nfunction trigger_next_question(setCounter, setNextQue, setQType, setStageCounter) {\n  if (is_allow_next_question) {\n    NextQuestion(loaded_answer_value, counter_val, setCounter, setQType, setStageCounter);\n    is_allow_next_question = false;\n    setNextQue(false);\n  }\n}\n\nfunction updateCounter(setCounter, new_counter, setQType, setStageCounter) {\n  console.log(words_status);\n  console.log(\"new word is \" + new_counter);\n  setStageCounter(prev => prev + 1);\n  setCounter(new_counter);\n  updateQType(new_counter, setQType);\n}\n\nfunction updateQType(counter, setQType) {\n  if (words_status[counter] == 1) {\n    setQType(0);\n  } else {\n    setQType(1);\n  }\n}\n\nconst App = () => {\n  _s();\n\n  const [counter, setCounter] = useState(0);\n  const [stageCounter, setStageCounter] = useState(0);\n  const [qType, setQType] = useState(0);\n  const [answer, setAnswer] = useState(0);\n  const [nextQue, setNextQue] = useState(false);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api\").then(response => response.json()).then(data => {\n      // console.log(data);\n      pieces = data.terms.split(\";;;\");\n      console.log(pieces);\n    }); // fetch(\"http://localhost:5000/api\").then(\n    //   response => console.log(response)  \n    // );\n\n    set_by_words_status(); // words_status[0] = WM_MC;\n    // mc_words.push(0);\n  }, []);\n\n  const handleAnswer = val => {\n    // setAnswer(val);\n    load_next_question(val, setNextQue);\n  }; // window.addEventListener('keydown', function(e) {\n  //   if(e.key == ' ') {\n  //     e.preventDefault();\n  //   }\n  // });\n\n\n  document.addEventListener('keydown', event => {\n    if (event.key == ' ' || event.key == 'Enter') trigger_next_question(setCounter, setNextQue, setQType, setStageCounter);\n  });\n  useEffect(() => {\n    if (counter >= 0) {\n      console.log(\"new word is \" + counter);\n      counter_val = counter;\n      updateQType(counter, setQType);\n    }\n  }, [counter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-div\",\n      onClick: event => trigger_next_question(setCounter, setNextQue, setQType, setStageCounter),\n      children: [qType == 0 ? /*#__PURE__*/_jsxDEV(MulChoQuestion, {\n        counter: counter,\n        pieces: pieces,\n        handleAnswer: handleAnswer,\n        stageCounter: stageCounter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 7\n      }, this) // <WriteQuestion counter={counter} pieces = {pieces} handleAnswer={handleAnswer}/>\n      : /*#__PURE__*/_jsxDEV(WriteQuestion, {\n        counter: counter,\n        pieces: pieces,\n        handleAnswer: handleAnswer,\n        stageCounter: stageCounter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this) // <MulChoQuestion counter={counter} pieces = {pieces} handleAnswer={handleAnswer}/>\n      , /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: nextQue ?\n        /*#__PURE__*/\n        // <h3>{is_nextQue ? (\n        _jsxDEV(_Fragment, {\n          children: \"Click anything to move to next question\"\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: mc_words.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: write_words.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: done_words.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: words_status.toString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Hql/iVDDyoQmI/qFm/EYx7iW/uc=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NextQuestion\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useEffect","useState","FlashCard","MulChoQuestion","WriteQuestion","pieces","mc_words","write_words","done_words","words_status","words_this_round","new_words_in_round","loaded_answer_value","is_allow_next_question","is_nextQue","counter_val","done","WM_UNKNOWN","WM_MC","WM_WRITE","WM_DONE","set_by_words_status","i","length","ws","push","get_new_word","includes","get_familiar_word","indexOf","comb","concat","difference","filter","x","new_word","Math","floor","random","console","log","NextQuestion","is_answerd_right","counter","setCounter","setQType","setStageCounter","word_stat","splice","mc_size","new_counter","updateCounter","allow_next_question","setNextQue","load_next_question","is_answered_right","setTimeout","trigger_next_question","prev","updateQType","App","stageCounter","qType","answer","setAnswer","nextQue","fetch","then","response","json","data","terms","split","handleAnswer","val","document","addEventListener","event","key","toString"],"sources":["C:/Users/gal/Desktop/manlet/client/src/App.js"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport FlashCard from './Questions/FlashCardQuestion'\nimport MulChoQuestion from './Questions/MulChoQuestion'\nimport WriteQuestion from './Questions/WriteQuestion'\n\n\nimport './App.css';\n\n\n\n\n// const terms = \"uma televisão;a TV;;;uma pasta;a briefcase;;;uma mesa;a table;;;uma cadeira;a chair;;;uma porta;a door;;;uma casa;a house;;;uma árvore;a tree;;;uma chave;a key;;;uma janela;a window;;;uma flor;a flower;;;uma caneta;a pen;;;uma carta;a card;;;uma garrafa;a bottle;;;uma chàvena;a tee cup;;;um avião;a plane;;;um copo;a glass;;;um candeeiro;a lamp;;;um telefone;a telephone;;;um rádio;a radio;;;um livro;a book;;;um cão;a dog;;;um gato;a cat;;;um computador;a computer;;;um mapa;a map;;;um cinzeiro;an ashtray;;;um cigarro;a cigarette;;;um barco;a boat;;;um relógio;a clock;;;um carro;a car;;;um lápis;a pencil;;;os livros;books;;;as mesas;tables;;;um rapaz;a boy;;;rapazes;boys;;;o mês;the month;;;meses;months;;;um homen;a man;;;os homens;men;;;bom;good (Sg.);;;bons;good (Pl.);;;o jornal;the newspaper;;;os jornais;newspaper (Pl.);;;o papel;the paper;;;os papéis;sheets of paper (pl.);;;azul;blue;;;azuis;blue (pl.);;;a mão;the hand;;;as mâos;hands;;;o limão;the lemon;;;os limões;lemons;;;o cão;the dog;;;os cães;dog;;;dois lápis;two pencils;;;grande;big;;;pequeno;small;;;grosso;thick;;;fino;thin;;;forte;strong;;;fraco;weak;;;velho;old (objects & people);;;novo;new (objects);;;jovem;young (people & animal);;;curto;short;;;comprido;long;;;gordo;fat;;;magro;skinny;;;alto;tall;;;baixo;short;;;bonito;beautiful;;;feio;ugly;;;rico;rich;;;pobre;poor;;;caro;expensive;;;barato;cheap;;;em cima de;on top of;;;debaixo de;under;;;por cima de;above;;;dentro de;inside;;;fora de;outside of;;;à frente de;in front of;;;atrás de;behind;;;em frente de/a;in front of (facing each other) / opposite;;;ao lado de;next to;;;entre ... e ...;in between;;;mal;schlecht, schlimm;;;bem;gut;;;meu bem;mein Schatz;;;uma mala;a suitcase;;;branco/a;white;;;preto/a;black;;;cinzento/a;grey;;;laranja;orange;;;vermelho/a;red;;;amarelo/a;yellow;;;cor-de-rosa;rose;;;verde;green;;;castanho/a;brown;;;roxo/a;purple;;;De que cor é / sao ...;What is / are the colours ...;;;Como está?;Wie geht es Ihnen?;;;Éstas bom?;Are you good?;;;Tudo bem?;All good?;;;o restaurante;the restaurant;;;a piscina;the swimming pool;;;o banco;the bank;;;a escola;the school;;;o cinema;the movie theatre;;;o supermercado;the supermarket;;;só;nur;;;senão;otherwise;;;um namorodo;a boyfriend;;;uma namorada;a girlfriend;;;namorar;to date;;;acho que não / sim;I think so / I do not think so;;;achar;think / find;;;a semana;the week;;;a segunda-feira;Monday;;;a terça-feira;Tuesday;;;a quarta-feira;Wednesday;;;a quinta-feira;Thursday;;;a sexta-feira;Friday;;;o sábado;Saturday;;;o domingo;Sunday;;;os Estados Unidos;the US;;;estar come fome;to be hungry;;;estar com sede;to be thirsty;;;estar com frio;to be cold;;;estar com calor;to be hot;;;estar contente;to be happy;;;estar triste;to be unhappy;;;estar cansado/a;to be tired;;;estar doente;to be sick;;;aberto;open;;;fechado;closed;;;cheio;full;;;vazion;empty;;;ligado;on;;;desligado;off;;;aceso;on (lights);;;apagado;off (lights);;;sujo;dirty;;;limpo;clean;;;seco;dry;;;molhado;wet;;;isto;this (indefinite);;;isso;that (indefinite);;;aquilo;that over there (indefinite);;;aqui;here;;;ai;there;;;ali;over there;;;este/esta estes/estas;this (definite);;;esse/essa esses/essas;that (definite);;;aquele/aquela aqueles/aquelas;that over there (definite);;;\"\n// const terms = \"uma televisão;a TV;;;uma pasta;a briefcase;;;uma mesa;a table;;;uma cadeira;a chair;;;uma porta;a door;;;uma casa;a house;;;uma árvore;a tree;;;uma chave;a key;;;uma janela;a window;;;uma flor;a flower;;;uma caneta;a pen;;;uma carta;a card;;;uma garrafa;a bottle;;;uma chàvena;a tee cup;;;um avião;a plane;;;um copo;a glass\"\n// let  pieces = terms.split(\";;;\");\nlet  pieces = \"\";\n\nlet mc_words =[];\n// let r1_words =[0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n// let r1_words_this_round = [];\nlet write_words =[];\nlet done_words =[];\n// let words_status = new Array(pieces.length).fill(0);\n// let words_status = [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\nlet words_status = [1,1,2,2,1,3,0,0,0,0,0,0,0,0,0,0];\n// let words_status = [2,3,3,3,3,3,2,2,2,1,0,0,0,0,0,0];\n\n// let words_status = [2, 3, 3, 3, 3, 3, 3, 2, 3, 3, 3, 3, 3, 2, 3, 1, 1];\nlet words_this_round = [];\nlet new_words_in_round =0;\n\n// let is_answer_loaded = false;\nlet loaded_answer_value = false;\nlet is_allow_next_question =false;\nlet is_nextQue = false;\n\nlet counter_val = 0;\n\nvar done = false;\n\nconst WM_UNKNOWN = 0;\nconst WM_MC = 1;\nconst WM_WRITE = 2;\nconst WM_DONE = 3;\n\nfunction set_by_words_status()\n{\n  for (let i = 0; i< words_status.length; i++){\n    let ws = words_status[i];\n    if (ws == WM_MC)\n      mc_words.push(i);\n    if (ws == WM_WRITE)\n      write_words.push(i);\n    if (ws == WM_DONE)\n      done_words.push(i);\n  }\n}\n\nfunction get_new_word()\n{\n  if (!words_status.includes(0))\n    return get_familiar_word();\n  // return words_status.findIndex((ele) => ele == 0);\n  return words_status.indexOf(0);\n\n}\nfunction get_familiar_word()\n{\n  // return 0;\n  const comb = mc_words.concat(write_words);\n  const difference = comb.filter( x => !words_this_round.includes(x) ); \n  if (difference.length > 0)\n  {\n    let new_word = difference[Math.floor(Math.random() * (difference.length))];\n\n    return new_word;\n  }\n  else \n  {\n    if (pieces.length == comb.length + done_words.length)\n      return comb[Math.floor(Math.random() * (difference.length))]\n    let new_word = get_new_word();\n    console.log(\"newwww \" + new_word);\n    return new_word;\n  }\n}\n\nfunction NextQuestion(is_answerd_right, counter, setCounter, setQType, setStageCounter)\n{\n  let word_stat = words_status[counter];\n  words_this_round.push(counter);\n\n  if (is_answerd_right)\n  {\n    if (word_stat < 3)\n      words_status[counter] = word_stat+1;\n    switch (word_stat)\n    {\n      case 0:\n        mc_words.push(counter);\n        break;\n      case 1:\n        mc_words.splice(mc_words.indexOf(counter), 1)\n        write_words.push(counter);\n        break;\n      case 2:\n        write_words.splice(write_words.indexOf(counter), 1)\n        done_words.push(counter);\n        break;\n        default:\n    }\n  }\n  else\n  {\n    if (word_stat > 1)\n      words_status[counter] = word_stat-1;\n    switch (word_stat)\n    {\n      case 0:\n        break;\n      case 1:\n        break;\n      case 2:\n        write_words.splice(write_words.indexOf(counter),1);\n        mc_words.push(counter);\n        break;\n        default:\n    }\n  }\n  if (words_this_round.length < 8)\n  {\n    let mc_size = mc_words.length;\n    if (mc_size < 20)\n    {\n      if (new_words_in_round < 2 && mc_size < 10)\n      {\n        let new_counter = get_new_word();\n        words_status[new_counter] = WM_MC;\n        mc_words.push(new_counter);\n        console.log(\"nigaa 1 \");\n\n        updateCounter(setCounter, new_counter, setQType, setStageCounter)\n\n        new_words_in_round++;\n      }\n      else\n      {\n        let new_word = get_familiar_word();\n        if (!mc_words.includes(new_word) && !write_words.includes(new_word))\n        {\n          mc_words.push(new_word);\n          words_status[new_word] = WM_MC;\n        }\n        console.log(\"nigaa 2 \");\n\n        updateCounter(setCounter, new_word, setQType, setStageCounter)\n        new_words_in_round++;\n      }\n\n    }\n    else\n    {\n      let new_counter = mc_words[Math.floor(Math.random() * (mc_words.length))];\n      updateCounter(setCounter, new_counter, setQType, setStageCounter)\n    }\n  }\n  else\n  {\n    new_words_in_round = 0;\n    words_this_round = [];\n    let new_word = get_familiar_word();\n    if (!mc_words.includes(new_word) && !write_words.includes(new_word))\n    {\n      mc_words.push(new_word);\n      words_status[new_word] = WM_MC;\n    }\n    console.log(\"nigaa 3 \");\n\n    updateCounter(setCounter, new_word, setQType, setStageCounter)\n\n\n    // next round\n  }\n}\n\nfunction allow_next_question(setNextQue)\n{\n  is_allow_next_question = true;\n  setNextQue(true);\n}\n\nfunction load_next_question(is_answered_right,setNextQue)\n{\n  loaded_answer_value = is_answered_right;\n  setTimeout(() => { \n    allow_next_question(setNextQue);\n    }, 200);\n}\n\nfunction trigger_next_question(setCounter, setNextQue, setQType, setStageCounter)\n{\n  if (is_allow_next_question)\n  {\n    NextQuestion(loaded_answer_value, counter_val, setCounter, setQType, setStageCounter);\n    is_allow_next_question = false;\n    setNextQue(false);\n  }\n  \n}\nfunction updateCounter(setCounter, new_counter, setQType, setStageCounter)\n{\n  console.log(words_status);\n  console.log(\"new word is \" + new_counter);\n  setStageCounter((prev) => prev +1);\n  setCounter(new_counter);\n  updateQType(new_counter, setQType);\n}\n\nfunction updateQType(counter, setQType)\n{\n  if (words_status[counter] == 1 )\n      { setQType(0); }\n      else\n      { setQType(1); } \n}\n\nconst App = () => {\n\n  const [counter, setCounter] = useState(0);\n  const [stageCounter, setStageCounter] = useState(0);\n  const [qType, setQType] = useState(0);\n  const [answer, setAnswer] = useState(0);\n  const [nextQue, setNextQue] = useState(false); \n\n\n  useEffect(() =>{\n    fetch(\"http://localhost:5000/api\").then(\n      response => response.json()\n    ).then(\n      data => {\n        // console.log(data);\n        pieces = data.terms.split(\";;;\");\n\n        console.log(pieces);\n      }\n    );\n    // fetch(\"http://localhost:5000/api\").then(\n    //   response => console.log(response)  \n    // );\n    set_by_words_status();\n    // words_status[0] = WM_MC;\n    // mc_words.push(0);\n  }, []);\n\n    \n  const handleAnswer = (val) => {\n    // setAnswer(val);\n    load_next_question(val, setNextQue);\n  }\n  // window.addEventListener('keydown', function(e) {\n  //   if(e.key == ' ') {\n  //     e.preventDefault();\n  //   }\n  // });\n\n  document.addEventListener('keydown', \n  (event) => { \n    if(event.key == ' ' || event.key == 'Enter') \n      trigger_next_question(setCounter, setNextQue, setQType, setStageCounter);\n  });\n\n  \n\n  useEffect(() => {\n    if (counter >= 0)\n    {\n      console.log(\"new word is \" + counter);\n      counter_val = counter;\n      \n      updateQType(counter, setQType);\n    }   \n},[counter]);\n\n  return (\n    <div className=\"App\">\n\n    <div className=\"question-div\"\n      onClick={(event) =>  \n          trigger_next_question(setCounter, setNextQue, setQType, setStageCounter)}>\n    {qType == 0 ?(\n      <MulChoQuestion counter={counter} pieces = {pieces}\n       handleAnswer={handleAnswer} stageCounter={stageCounter}/>\n      // <WriteQuestion counter={counter} pieces = {pieces} handleAnswer={handleAnswer}/>\n\n\n    )\n      :(\n        <WriteQuestion counter={counter} pieces = {pieces}\n         handleAnswer={handleAnswer} stageCounter={stageCounter}/>\n        // <MulChoQuestion counter={counter} pieces = {pieces} handleAnswer={handleAnswer}/>\n\n      )}\n      <h3>{nextQue ? (\n      // <h3>{is_nextQue ? (\n\n      <>\n      Click anything to move to next question\n      </>\n    ) : (\n      <>\n         \n      </>\n    )}\n    </h3>\n    </div>\n\n    {/* <button onClick={() => setCounter(Math.floor(Math.random() * (pieces.length)))}>Randomize</button>\n    <input id=\"write-box\" autoComplete=\"off\" placeholder='Insert text'/> */}\n       <h1>{mc_words.toString()}</h1>\n\n    <h1>{write_words.toString()}</h1>\n    <h1>{done_words.toString()}</h1>\n    <h1>{words_status.toString()}</h1>\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}